<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="hashtable2_8c" kind="file" language="C++">
    <compoundname>hashtable2.c</compoundname>
    <includes refid="hashtable2_8h" local="yes">hashtable2.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="dict__private_8h" local="yes">dict_private.h</includes>
    <includes refid="hashtable__common_8h" local="yes">hashtable_common.h</includes>
    <incdepgraph>
      <node id="3">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dict_private.h</label>
        <link refid="dict__private_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/hashtable2.c</label>
        <link refid="hashtable2_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>hashtable_common.h</label>
        <link refid="hashtable__common_8h"/>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
      <node id="18">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structhash__node" prot="public">hash_node</innerclass>
    <innerclass refid="structhashtable2" prot="public">hashtable2</innerclass>
    <innerclass refid="structhashtable2__itor" prot="public">hashtable2_itor</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hashtable2_8c_1a24e21f497bc214e2c211c4bed541bdf8" prot="public" static="no">
        <name>LOADFACTOR_NUMERATOR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="39" column="9" bodyfile="src/hashtable2.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hashtable2_8c_1a58651144f26400509df7a63f76c972c9" prot="public" static="no">
        <name>LOADFACTOR_DENOMINATOR</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="40" column="9" bodyfile="src/hashtable2.c" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hashtable2_8c_1a4a37dff778daa13ddb34cd8e4ef1a129" prot="public" static="no">
        <type>struct <ref refid="structhash__node" kindref="compound">hash_node</ref></type>
        <definition>typedef struct hash_node hash_node</definition>
        <argsstring></argsstring>
        <name>hash_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="45" column="24" bodyfile="src/hashtable2.c" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hashtable2_8c_1a1c33bed2d1996ebfbb81a841f3439393" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structdict__vtable" kindref="compound">dict_vtable</ref></type>
        <definition>const dict_vtable hashtable2_vtable</definition>
        <argsstring></argsstring>
        <name>hashtable2_vtable</name>
        <initializer>= {
    false,
    (<ref refid="dict_8h_1ad70c6127784fe473398838a4ca7ee0e8" kindref="member">dict_inew_func</ref>)	    <ref refid="hashtable2_8c_1a0ff5cf294222a238e6d3e51a2ba4dd3d" kindref="member">hashtable2_dict_itor_new</ref>,
    (<ref refid="dict_8h_1a861d296c134c416c965b8e2117cda33a" kindref="member">dict_dfree_func</ref>)	    <ref refid="hashtable2_8c_1a25f09fa1be9712c4837e1d8df24155ee" kindref="member">hashtable2_free</ref>,
    (<ref refid="dict_8h_1a526ec5a7be277ebf2fb509362b6b2f0c" kindref="member">dict_insert_func</ref>)	    <ref refid="hashtable2_8c_1a7268c0a22aa2e614e4224f6b519520eb" kindref="member">hashtable2_insert</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    <ref refid="hashtable2_8c_1a1246b5d3b772baf221ad394bc6dcff2c" kindref="member">hashtable2_search</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    NULL,
    (<ref refid="dict_8h_1a03ac901668905b999c543bd504ce6049" kindref="member">dict_remove_func</ref>)	    <ref refid="hashtable2_8c_1aeb094c7bce06fe3998757ad6cf27c8eb" kindref="member">hashtable2_remove</ref>,
    (<ref refid="dict_8h_1af10d9833546e8a985bf8a21e7cca9c39" kindref="member">dict_clear_func</ref>)	    <ref refid="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" kindref="member">hashtable2_clear</ref>,
    (<ref refid="dict_8h_1a465ab0c48a0c2920bd4a4d2119dde513" kindref="member">dict_traverse_func</ref>)    <ref refid="hashtable2_8c_1af8b2f7f0fcd184eac4dfcc4bc74ca99a" kindref="member">hashtable2_traverse</ref>,
    (<ref refid="dict_8h_1a18186f71a497454b44c31cd4737594fc" kindref="member">dict_select_func</ref>)	    NULL,
    (<ref refid="dict_8h_1a6c85f33ba34353d8433b41377053f882" kindref="member">dict_count_func</ref>)	    <ref refid="hashtable2_8c_1a876d26c5e2e9ed0a0df1a6a9618b06c3" kindref="member">hashtable2_count</ref>,
    (<ref refid="dict_8h_1aeb7fec8d69b3fc9802e46e7d3eae4d41" kindref="member">dict_verify_func</ref>)	    <ref refid="hashtable2_8c_1a0046bedc02fbc13fc2ad5e63c6f6d65c" kindref="member">hashtable2_verify</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="66" column="26" bodyfile="src/hashtable2.c" bodystart="66" bodyend="82"/>
      </memberdef>
      <memberdef kind="variable" id="hashtable2_8c_1aeb6d49a24931b3fc47e240e4dd0e5a6b" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structitor__vtable" kindref="compound">itor_vtable</ref></type>
        <definition>const itor_vtable hashtable2_itor_vtable</definition>
        <argsstring></argsstring>
        <name>hashtable2_itor_vtable</name>
        <initializer>= {
    (<ref refid="dict_8h_1af7abde3da86249ff4c3d19f5e62e7617" kindref="member">dict_ifree_func</ref>)	    <ref refid="hashtable2_8c_1aa32b8b4ebed701351a7d4463c5f28dca" kindref="member">hashtable2_itor_free</ref>,
    (<ref refid="dict_8h_1a66d8fb8461e0c7c72407c33f9eb1fc92" kindref="member">dict_valid_func</ref>)	    <ref refid="hashtable2_8c_1a2d78df14e4791b628483129358ffab7c" kindref="member">hashtable2_itor_valid</ref>,
    (<ref refid="dict_8h_1a1fdd9cad34cc517ad72e999498333195" kindref="member">dict_invalidate_func</ref>)  <ref refid="hashtable2_8c_1a7d7262bb936836d3456bae0c279503c8" kindref="member">hashtable2_itor_invalidate</ref>,
    (<ref refid="dict_8h_1a70987d3f887eb81f7ff4fb344bf09859" kindref="member">dict_next_func</ref>)	    <ref refid="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" kindref="member">hashtable2_itor_next</ref>,
    (<ref refid="dict_8h_1ad0f023b37e2af0590e30cba3ebb779bf" kindref="member">dict_prev_func</ref>)	    <ref refid="hashtable2_8c_1a368edbffbff8a943596091af2debd361" kindref="member">hashtable2_itor_prev</ref>,
    (<ref refid="dict_8h_1a65f11df3f83a7ffe796598fc3efead7d" kindref="member">dict_nextn_func</ref>)	    <ref refid="hashtable2_8c_1a19fbc151fe7bca8c36a644b637ee9297" kindref="member">hashtable2_itor_nextn</ref>,
    (<ref refid="dict_8h_1aaf7eb283d05ac82c2a7f32d39286c888" kindref="member">dict_prevn_func</ref>)	    <ref refid="hashtable2_8c_1ab66622dadb9e0b6ca52890478432214b" kindref="member">hashtable2_itor_prevn</ref>,
    (<ref refid="dict_8h_1a6e5c0bb6cb2131da31fdb2c1b363a734" kindref="member">dict_first_func</ref>)	    <ref refid="hashtable2_8c_1abbb66009f907225aed01c996bbd46126" kindref="member">hashtable2_itor_first</ref>,
    (<ref refid="dict_8h_1adc800add5456e9c0d9fd2f4f8f8b868f" kindref="member">dict_last_func</ref>)	    <ref refid="hashtable2_8c_1afb08ba6ed96ce232d98f263ffc9f993a" kindref="member">hashtable2_itor_last</ref>,
    (<ref refid="dict_8h_1a7969590b6825845cd1e644d05b4fa300" kindref="member">dict_key_func</ref>)	    <ref refid="hashtable2_8c_1acbfa355e5d41034d3e6a262b06b11dc5" kindref="member">hashtable2_itor_key</ref>,
    (<ref refid="dict_8h_1aa24f05bcc6368e21bc8774eec9fb3a17" kindref="member">dict_datum_func</ref>)	    <ref refid="hashtable2_8c_1a3b2ea9bc8254b9eda6a1fbf53ec83f3a" kindref="member">hashtable2_itor_datum</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    <ref refid="hashtable2_8c_1afa082694a816bcfc2dd09d410c18ed00" kindref="member">hashtable2_itor_search</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    NULL,
    (<ref refid="dict_8h_1ad01841eadd81f6b6eb68a1809aa7c7a1" kindref="member">dict_iremove_func</ref>)	    <ref refid="hashtable2_8c_1a3b9d4a624ac364b31479b10409ef839a" kindref="member">hashtable2_itor_remove</ref>,
    (<ref refid="dict_8h_1a64ed8ac945518e5d17e23a5d640fc5ef" kindref="member">dict_icompare_func</ref>)    NULL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="84" column="26" bodyfile="src/hashtable2.c" bodystart="84" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hashtable2_8c_1a840e984b3c37be780f2cd0e054513e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
        <definition>hashtable2 * hashtable2_new</definition>
        <argsstring>(dict_compare_func cmp_func, dict_hash_func hash_func, unsigned initial_size)</argsstring>
        <name>hashtable2_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>initial_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="106" column="1" bodyfile="src/hashtable2.c" bodystart="106" bodyend="126"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable2_8c" startline="55">hashtable2::cmp_func</references>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
        <references refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" compoundref="hashtable__common_8c" startline="41" endline="48">dict_prime_geq</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable2_8c" startline="56">hashtable2::hash_func</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1afb856415818c346738023a60f2bc2015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict" kindref="compound">dict</ref> *</type>
        <definition>dict * hashtable2_dict_new</definition>
        <argsstring>(dict_compare_func cmp_func, dict_hash_func hash_func, unsigned initial_size)</argsstring>
        <name>hashtable2_dict_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>initial_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="129" column="1" bodyfile="src/hashtable2.c" bodystart="129" bodyend="144"/>
        <references refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" compoundref="dict_8h" startline="152">dict::_object</references>
        <references refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" compoundref="dict_8h" startline="153">dict::_vtable</references>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable2_8c_1a840e984b3c37be780f2cd0e054513e62" compoundref="hashtable2_8c" startline="106" endline="126">hashtable2_new</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a25f09fa1be9712c4837e1d8df24155ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable2_free</definition>
        <argsstring>(hashtable2 *table, dict_delete_func delete_func)</argsstring>
        <name>hashtable2_free</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="147" column="1" bodyfile="src/hashtable2.c" bodystart="147" bodyend="153"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" compoundref="hashtable2_8c" startline="305" endline="321">hashtable2_clear</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1abad30376a62126cb507f4c128e1e1669" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></type>
        <definition>static dict_insert_result insert</definition>
        <argsstring>(hashtable2 *table, void *key, unsigned hash)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="156" column="1" bodyfile="src/hashtable2.c" bodystart="156" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a7fc1f7a2c65b3ed69d3e85c3b7e6e32d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>static unsigned nonzero_hash</definition>
        <argsstring>(dict_hash_func hash_func, const void *key)</argsstring>
        <name>nonzero_hash</name>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="180" column="1" bodyfile="src/hashtable2.c" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a7268c0a22aa2e614e4224f6b519520eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></type>
        <definition>dict_insert_result hashtable2_insert</definition>
        <argsstring>(hashtable2 *table, void *key)</argsstring>
        <name>hashtable2_insert</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="187" column="1" bodyfile="src/hashtable2.c" bodystart="187" bodyend="200"/>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
        <references refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable2_8c" startline="56">hashtable2::hash_func</references>
        <references refid="hashtable2_8c_1aaf369a616093a2af00d38c41aab53201" compoundref="hashtable2_8c" startline="357" endline="398">hashtable2_resize</references>
        <references refid="structdict__insert__result_1a325385b8d6787835cb03a2f364ab2c56" compoundref="dict_8h" startline="75">dict_insert_result::inserted</references>
        <references refid="hashtable2_8c_1a58651144f26400509df7a63f76c972c9" compoundref="hashtable2_8c" startline="40">LOADFACTOR_DENOMINATOR</references>
        <references refid="hashtable2_8c_1a24e21f497bc214e2c211c4bed541bdf8" compoundref="hashtable2_8c" startline="39">LOADFACTOR_NUMERATOR</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a1246b5d3b772baf221ad394bc6dcff2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** hashtable2_search</definition>
        <argsstring>(hashtable2 *table, const void *key)</argsstring>
        <name>hashtable2_search</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="203" column="1" bodyfile="src/hashtable2.c" bodystart="203" bodyend="220"/>
        <references refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable2_8c" startline="55">hashtable2::cmp_func</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable2_8c" startline="56">hashtable2::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1ae1a988f194f37acf6ab2f74b67454c5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_cleanup</definition>
        <argsstring>(hashtable2 *table, hash_node *const first, hash_node *node)</argsstring>
        <name>remove_cleanup</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="structhash__node" kindref="compound">hash_node</ref> *const</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="structhash__node" kindref="compound">hash_node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="244" column="1" bodyfile="src/hashtable2.c" bodystart="244" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a49a337e06a6264154cbc19b84ba98c3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_node</definition>
        <argsstring>(hashtable2 *table, hash_node *first, hash_node *node)</argsstring>
        <name>remove_node</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="structhash__node" kindref="compound">hash_node</ref> *</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="structhash__node" kindref="compound">hash_node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="268" column="1" bodyfile="src/hashtable2.c" bodystart="268" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1aeb094c7bce06fe3998757ad6cf27c8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></type>
        <definition>dict_remove_result hashtable2_remove</definition>
        <argsstring>(hashtable2 *table, const void *key)</argsstring>
        <name>hashtable2_remove</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="282" column="1" bodyfile="src/hashtable2.c" bodystart="282" bodyend="302"/>
        <references refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable2_8c" startline="55">hashtable2::cmp_func</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable2_8c" startline="56">hashtable2::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable2_clear</definition>
        <argsstring>(hashtable2 *table, dict_delete_func delete_func)</argsstring>
        <name>hashtable2_clear</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="305" column="1" bodyfile="src/hashtable2.c" bodystart="305" bodyend="321"/>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1af8b2f7f0fcd184eac4dfcc4bc74ca99a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable2_traverse</definition>
        <argsstring>(hashtable2 *table, dict_visit_func visit, void *user_data)</argsstring>
        <name>hashtable2_traverse</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref></type>
          <declname>visit</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="324" column="1" bodyfile="src/hashtable2.c" bodystart="324" bodyend="336"/>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a876d26c5e2e9ed0a0df1a6a9618b06c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable2_count</definition>
        <argsstring>(const hashtable2 *table)</argsstring>
        <name>hashtable2_count</name>
        <param>
          <type>const <ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="339" column="1" bodyfile="src/hashtable2.c" bodystart="339" bodyend="342"/>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a8ff49ac56174d0ba8d06025cd9be2c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable2_size</definition>
        <argsstring>(const hashtable2 *table)</argsstring>
        <name>hashtable2_size</name>
        <param>
          <type>const <ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="345" column="1" bodyfile="src/hashtable2.c" bodystart="345" bodyend="348"/>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a8f6f7578c572be0270a4d1e63603bc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable2_slots_used</definition>
        <argsstring>(const hashtable2 *table)</argsstring>
        <name>hashtable2_slots_used</name>
        <param>
          <type>const <ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="351" column="1" bodyfile="src/hashtable2.c" bodystart="351" bodyend="354"/>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1aaf369a616093a2af00d38c41aab53201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_resize</definition>
        <argsstring>(hashtable2 *table, unsigned new_size)</argsstring>
        <name>hashtable2_resize</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="357" column="1" bodyfile="src/hashtable2.c" bodystart="357" bodyend="398"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structdict__insert__result_1a9874e765273b8a34323b00166c989f2e" compoundref="dict_8h" startline="74">dict_insert_result::datum_ptr</references>
        <references refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" compoundref="hashtable__common_8c" startline="41" endline="48">dict_prime_geq</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structdict__insert__result_1a325385b8d6787835cb03a2f364ab2c56" compoundref="dict_8h" startline="75">dict_insert_result::inserted</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a0046bedc02fbc13fc2ad5e63c6f6d65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_verify</definition>
        <argsstring>(const hashtable2 *table)</argsstring>
        <name>hashtable2_verify</name>
        <param>
          <type>const <ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="401" column="1" bodyfile="src/hashtable2.c" bodystart="401" bodyend="415"/>
        <references refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable2_8c" startline="54">hashtable2::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" compoundref="dict__private_8h" startline="78" endline="85">VERIFY</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a0c15f24c3e187b1c121a051ef62b8e43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
        <definition>hashtable2_itor * hashtable2_itor_new</definition>
        <argsstring>(hashtable2 *table)</argsstring>
        <name>hashtable2_itor_new</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="418" column="1" bodyfile="src/hashtable2.c" bodystart="418" bodyend="426"/>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a0ff5cf294222a238e6d3e51a2ba4dd3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__itor" kindref="compound">dict_itor</ref> *</type>
        <definition>dict_itor * hashtable2_dict_itor_new</definition>
        <argsstring>(hashtable2 *table)</argsstring>
        <name>hashtable2_dict_itor_new</name>
        <param>
          <type><ref refid="structhashtable2" kindref="compound">hashtable2</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="429" column="1" bodyfile="src/hashtable2.c" bodystart="429" bodyend="440"/>
        <references refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" compoundref="dict_8h" startline="174">dict_itor::_itor</references>
        <references refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" compoundref="dict_8h" startline="175">dict_itor::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable2_8c_1a0c15f24c3e187b1c121a051ef62b8e43" compoundref="hashtable2_8c" startline="418" endline="426">hashtable2_itor_new</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1aa32b8b4ebed701351a7d4463c5f28dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashtable2_itor_free</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_free</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="443" column="1" bodyfile="src/hashtable2.c" bodystart="443" bodyend="446"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a2d78df14e4791b628483129358ffab7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_valid</definition>
        <argsstring>(const hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_valid</name>
        <param>
          <type>const <ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="449" column="1" bodyfile="src/hashtable2.c" bodystart="449" bodyend="455"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a7d7262bb936836d3456bae0c279503c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashtable2_itor_invalidate</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_invalidate</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="458" column="1" bodyfile="src/hashtable2.c" bodystart="458" bodyend="461"/>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_next</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_next</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="464" column="1" bodyfile="src/hashtable2.c" bodystart="464" bodyend="475"/>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a368edbffbff8a943596091af2debd361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_prev</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_prev</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="478" column="1" bodyfile="src/hashtable2.c" bodystart="478" bodyend="489"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a19fbc151fe7bca8c36a644b637ee9297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_nextn</definition>
        <argsstring>(hashtable2_itor *itor, size_t count)</argsstring>
        <name>hashtable2_itor_nextn</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="492" column="1" bodyfile="src/hashtable2.c" bodystart="492" bodyend="498"/>
        <references refid="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" compoundref="hashtable2_8c" startline="464" endline="475">hashtable2_itor_next</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1ab66622dadb9e0b6ca52890478432214b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_prevn</definition>
        <argsstring>(hashtable2_itor *itor, size_t count)</argsstring>
        <name>hashtable2_itor_prevn</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="501" column="1" bodyfile="src/hashtable2.c" bodystart="501" bodyend="507"/>
        <references refid="hashtable2_8c_1a368edbffbff8a943596091af2debd361" compoundref="hashtable2_8c" startline="478" endline="489">hashtable2_itor_prev</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1abbb66009f907225aed01c996bbd46126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_first</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_first</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="510" column="1" bodyfile="src/hashtable2.c" bodystart="510" bodyend="520"/>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1afb08ba6ed96ce232d98f263ffc9f993a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_last</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_last</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="523" column="1" bodyfile="src/hashtable2.c" bodystart="523" bodyend="533"/>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1afa082694a816bcfc2dd09d410c18ed00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_search</definition>
        <argsstring>(hashtable2_itor *itor, const void *key)</argsstring>
        <name>hashtable2_itor_search</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="536" column="1" bodyfile="src/hashtable2.c" bodystart="536" bodyend="554"/>
        <references refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable2_8c" startline="55">hashtable2::cmp_func</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable2_8c" startline="56">hashtable2::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1acbfa355e5d41034d3e6a262b06b11dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * hashtable2_itor_key</definition>
        <argsstring>(const hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_key</name>
        <param>
          <type>const <ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="557" column="1" bodyfile="src/hashtable2.c" bodystart="557" bodyend="560"/>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a3b2ea9bc8254b9eda6a1fbf53ec83f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** hashtable2_itor_datum</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_datum</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="563" column="1" bodyfile="src/hashtable2.c" bodystart="563" bodyend="566"/>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable2_8c_1a3b9d4a624ac364b31479b10409ef839a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable2_itor_remove</definition>
        <argsstring>(hashtable2_itor *itor)</argsstring>
        <name>hashtable2_itor_remove</name>
        <param>
          <type><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable2.c" line="569" column="1" bodyfile="src/hashtable2.c" bodystart="569" bodyend="578"/>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="53">hash_node::hash</references>
        <references refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable2_8c" startline="58">hashtable2::size</references>
        <references refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" compoundref="hashtable2_8c" startline="63">hashtable2_itor::slot</references>
        <references refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" compoundref="hashtable2_8c" startline="57">hashtable2::table</references>
        <references refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" compoundref="hashtable2_8c" startline="62">hashtable2_itor::table</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libdict<sp/>--<sp/>chained<sp/>hash-table,<sp/>with<sp/>chains<sp/>sorted<sp/>by<sp/>hash,<sp/>implementation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001-2014,<sp/>Farooq<sp/>Mela</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>cf.<sp/>[Gonnet<sp/>1984],<sp/>[Knuth<sp/>1998]</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hashtable2_8h" kindref="compound">hashtable2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>memset()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict__private_8h" kindref="compound">dict_private.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hashtable__common_8h" kindref="compound">hashtable_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>make<sp/>this<sp/>configurable<sp/>in<sp/>the<sp/>constructor<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="hashtable2_8c_1a24e21f497bc214e2c211c4bed541bdf8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOADFACTOR_NUMERATOR<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="hashtable2_8c_1a58651144f26400509df7a63f76c972c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOADFACTOR_DENOMINATOR<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LOADFACTOR_NUMERATOR<sp/>&gt;<sp/>LOADFACTOR_DENOMINATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>LOADFACTOR_NUMERATOR<sp/>must<sp/>be<sp/>less<sp/>than<sp/>LOADFACTOR_DENOMINATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="hashtable2_8c_1a4a37dff778daa13ddb34cd8e4ef1a129" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Untruncated<sp/>hash<sp/>value;<sp/>0<sp/>iff<sp/>unoccupied.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structhashtable2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhashtable2" kindref="compound">hashtable2</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="55" refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>;</highlight></codeline>
<codeline lineno="56" refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>;</highlight></codeline>
<codeline lineno="57" refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="58" refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structhashtable2__itor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="63" refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdict__vtable" kindref="compound">dict_vtable</ref><sp/>hashtable2_vtable<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad70c6127784fe473398838a4ca7ee0e8" kindref="member">dict_inew_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a0ff5cf294222a238e6d3e51a2ba4dd3d" kindref="member">hashtable2_dict_itor_new</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a861d296c134c416c965b8e2117cda33a" kindref="member">dict_dfree_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a25f09fa1be9712c4837e1d8df24155ee" kindref="member">hashtable2_free</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a526ec5a7be277ebf2fb509362b6b2f0c" kindref="member">dict_insert_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a7268c0a22aa2e614e4224f6b519520eb" kindref="member">hashtable2_insert</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a1246b5d3b772baf221ad394bc6dcff2c" kindref="member">hashtable2_search</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_le:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_lt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_ge:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_gt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a03ac901668905b999c543bd504ce6049" kindref="member">dict_remove_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1aeb094c7bce06fe3998757ad6cf27c8eb" kindref="member">hashtable2_remove</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1af10d9833546e8a985bf8a21e7cca9c39" kindref="member">dict_clear_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" kindref="member">hashtable2_clear</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a465ab0c48a0c2920bd4a4d2119dde513" kindref="member">dict_traverse_func</ref>)<sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1af8b2f7f0fcd184eac4dfcc4bc74ca99a" kindref="member">hashtable2_traverse</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a18186f71a497454b44c31cd4737594fc" kindref="member">dict_select_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a6c85f33ba34353d8433b41377053f882" kindref="member">dict_count_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a876d26c5e2e9ed0a0df1a6a9618b06c3" kindref="member">hashtable2_count</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aeb7fec8d69b3fc9802e46e7d3eae4d41" kindref="member">dict_verify_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a0046bedc02fbc13fc2ad5e63c6f6d65c" kindref="member">hashtable2_verify</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structitor__vtable" kindref="compound">itor_vtable</ref><sp/>hashtable2_itor_vtable<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1af7abde3da86249ff4c3d19f5e62e7617" kindref="member">dict_ifree_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1aa32b8b4ebed701351a7d4463c5f28dca" kindref="member">hashtable2_itor_free</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a66d8fb8461e0c7c72407c33f9eb1fc92" kindref="member">dict_valid_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a2d78df14e4791b628483129358ffab7c" kindref="member">hashtable2_itor_valid</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a1fdd9cad34cc517ad72e999498333195" kindref="member">dict_invalidate_func</ref>)<sp/><sp/><ref refid="hashtable2_8c_1a7d7262bb936836d3456bae0c279503c8" kindref="member">hashtable2_itor_invalidate</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a70987d3f887eb81f7ff4fb344bf09859" kindref="member">dict_next_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" kindref="member">hashtable2_itor_next</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad0f023b37e2af0590e30cba3ebb779bf" kindref="member">dict_prev_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a368edbffbff8a943596091af2debd361" kindref="member">hashtable2_itor_prev</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a65f11df3f83a7ffe796598fc3efead7d" kindref="member">dict_nextn_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a19fbc151fe7bca8c36a644b637ee9297" kindref="member">hashtable2_itor_nextn</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aaf7eb283d05ac82c2a7f32d39286c888" kindref="member">dict_prevn_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1ab66622dadb9e0b6ca52890478432214b" kindref="member">hashtable2_itor_prevn</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a6e5c0bb6cb2131da31fdb2c1b363a734" kindref="member">dict_first_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1abbb66009f907225aed01c996bbd46126" kindref="member">hashtable2_itor_first</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1adc800add5456e9c0d9fd2f4f8f8b868f" kindref="member">dict_last_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1afb08ba6ed96ce232d98f263ffc9f993a" kindref="member">hashtable2_itor_last</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a7969590b6825845cd1e644d05b4fa300" kindref="member">dict_key_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1acbfa355e5d41034d3e6a262b06b11dc5" kindref="member">hashtable2_itor_key</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aa24f05bcc6368e21bc8774eec9fb3a17" kindref="member">dict_datum_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a3b2ea9bc8254b9eda6a1fbf53ec83f3a" kindref="member">hashtable2_itor_datum</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1afa082694a816bcfc2dd09d410c18ed00" kindref="member">hashtable2_itor_search</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_le:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_lt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_ge:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_gt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad01841eadd81f6b6eb68a1809aa7c7a1" kindref="member">dict_iremove_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="hashtable2_8c_1a3b9d4a624ac364b31479b10409ef839a" kindref="member">hashtable2_itor_remove</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a64ed8ac945518e5d17e23a5d640fc5ef" kindref="member">dict_icompare_func</ref>)<sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>hashtable2_itor_compare<sp/>not<sp/>implemented<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*</highlight></codeline>
<codeline lineno="106" refid="hashtable2_8c_1a840e984b3c37be780f2cd0e054513e62" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a840e984b3c37be780f2cd0e054513e62" kindref="member">hashtable2_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/>cmp_func,<sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/>hash_func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>initial_size)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(cmp_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(hash_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(initial_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*table));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>=<sp/><ref refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" kindref="member">dict_prime_geq</ref>(initial_size);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>,<sp/>0,<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref><sp/>=<sp/>cmp_func;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref><sp/>=<sp/>hash_func;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="structdict" kindref="compound">dict</ref>*</highlight></codeline>
<codeline lineno="129" refid="hashtable2_8c_1afb856415818c346738023a60f2bc2015" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1afb856415818c346738023a60f2bc2015" kindref="member">hashtable2_dict_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/>cmp_func,<sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/>hash_func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>initial_size)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(hash_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(initial_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict" kindref="compound">dict</ref>*<sp/>dct<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dct));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dct)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>dct-&gt;<ref refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" kindref="member">_object</ref><sp/>=<sp/><ref refid="hashtable2_8c_1a840e984b3c37be780f2cd0e054513e62" kindref="member">hashtable2_new</ref>(cmp_func,<sp/>hash_func,<sp/>initial_size);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dct-&gt;<ref refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" kindref="member">_object</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(dct);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>dct-&gt;<ref refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" kindref="member">_vtable</ref><sp/>=<sp/>&amp;hashtable2_vtable;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dct;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="hashtable2_8c_1a25f09fa1be9712c4837e1d8df24155ee" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a25f09fa1be9712c4837e1d8df24155ee" kindref="member">hashtable2_free</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/><ref refid="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" kindref="member">hashtable2_clear</ref>(table,<sp/>delete_func);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal">insert(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>(hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>table_end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>&amp;node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>==<sp/>hash<sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>&amp;node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++node<sp/>==<sp/>table_end)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>first);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>room<sp/>for<sp/>new<sp/>element!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">nonzero_hash(<ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/>hash_func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>hash_func(key);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash<sp/>?<sp/>hash<sp/>:<sp/>~(unsigned)0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></highlight></codeline>
<codeline lineno="187" refid="hashtable2_8c_1a7268c0a22aa2e614e4224f6b519520eb" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a7268c0a22aa2e614e4224f6b519520eb" kindref="member">hashtable2_insert</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hashtable2_8c_1a58651144f26400509df7a63f76c972c9" kindref="member">LOADFACTOR_DENOMINATOR</ref><sp/>*<sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>&gt;=<sp/><ref refid="hashtable2_8c_1a24e21f497bc214e2c211c4bed541bdf8" kindref="member">LOADFACTOR_NUMERATOR</ref><sp/>*<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Load<sp/>factor<sp/>too<sp/>high:<sp/>increase<sp/>the<sp/>table<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hashtable2_8c_1aaf369a616093a2af00d38c41aab53201" kindref="member">hashtable2_resize</ref>(table,<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>memory<sp/>for<sp/>a<sp/>bigger<sp/>table,<sp/>but<sp/>let<sp/>the<sp/>insert<sp/>proceed<sp/>anyway.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>nonzero_hash(table-&gt;<ref refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>,<sp/>key);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref><sp/>result<sp/>=<sp/>insert(table,<sp/>key,<sp/>hash);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="structdict__insert__result_1a325385b8d6787835cb03a2f364ab2c56" kindref="member">inserted</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="203" refid="hashtable2_8c_1a1246b5d3b772baf221ad394bc6dcff2c" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a1246b5d3b772baf221ad394bc6dcff2c" kindref="member">hashtable2_search</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>nonzero_hash(table-&gt;<ref refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>,<sp/>key);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>(hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>table_end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>occupied.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>==<sp/>hash<sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++node<sp/>==<sp/>table_end)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>first);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">index_of_node_to_shift(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>truncated_hash,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>&amp;table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[index];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>%<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>==<sp/>truncated_hash)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_index<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++index<sp/>==<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(index<sp/>!=<sp/>truncated_hash);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_index;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">remove_cleanup(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first,<sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>table_end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hash)<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>occupied.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>datum<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref><sp/>result<sp/>=<sp/>insert(table,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>hash);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(result.<ref refid="structdict__insert__result_1a325385b8d6787835cb03a2f364ab2c56" kindref="member">inserted</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(result.<ref refid="structdict__insert__result_1a9874e765273b8a34323b00166c989f2e" kindref="member">datum_ptr</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(*result.<ref refid="structdict__insert__result_1a9874e765273b8a34323b00166c989f2e" kindref="member">datum_ptr</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>*result.<ref refid="structdict__insert__result_1a9874e765273b8a34323b00166c989f2e" kindref="member">datum_ptr</ref><sp/>=<sp/>datum;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++node<sp/>==<sp/>table_end)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>first);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">remove_node(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>first,<sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref><sp/>=<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++node<sp/>==<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>remove_cleanup(table,<sp/>first,<sp/>node);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></highlight></codeline>
<codeline lineno="282" refid="hashtable2_8c_1aeb094c7bce06fe3998757ad6cf27c8eb" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1aeb094c7bce06fe3998757ad6cf27c8eb" kindref="member">hashtable2_remove</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>nonzero_hash(table-&gt;<ref refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>,<sp/>key);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>(hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>table_end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>occupied.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>==<sp/>hash<sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref><sp/>result<sp/>=<sp/>{<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_node(table,<sp/>first,<sp/>node);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++node<sp/>==<sp/>table_end)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>first);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref>)<sp/>{<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a44ae5c4f6823ed8258898e3bde0a224d" kindref="member">hashtable2_clear</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>node<sp/>!=<sp/>end;<sp/>++node)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delete_func)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete_func(node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref><sp/>=<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="hashtable2_8c_1af8b2f7f0fcd184eac4dfcc4bc74ca99a" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1af8b2f7f0fcd184eac4dfcc4bc74ca99a" kindref="member">hashtable2_traverse</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref><sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>node<sp/>!=<sp/>end;<sp/>++node)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visit(node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/>user_data))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="hashtable2_8c_1a876d26c5e2e9ed0a0df1a6a9618b06c3" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a876d26c5e2e9ed0a0df1a6a9618b06c3" kindref="member">hashtable2_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="hashtable2_8c_1a8ff49ac56174d0ba8d06025cd9be2c31" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a8ff49ac56174d0ba8d06025cd9be2c31" kindref="member">hashtable2_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="hashtable2_8c_1a8f6f7578c572be0270a4d1e63603bc3b" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a8f6f7578c572be0270a4d1e63603bc3b" kindref="member">hashtable2_slots_used</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="hashtable2_8c_1aaf369a616093a2af00d38c41aab53201" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1aaf369a616093a2af00d38c41aab53201" kindref="member">hashtable2_resize</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(new_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>new_size<sp/>=<sp/><ref refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" kindref="member">dict_prime_geq</ref>(new_size);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>==<sp/>new_size)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>&gt;<sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>records<sp/>already<sp/>in<sp/>hashtable<sp/>will<sp/>not<sp/>fit<sp/>(must<sp/>be<sp/>a<sp/>reduction<sp/>in<sp/>size).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>old_size<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>old_count<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old_table<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(new_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>=<sp/>old_table;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>,<sp/>0,<sp/>new_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>old_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_table[i].hash)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref><sp/>result<sp/>=</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert(table,<sp/>old_table[i].key,<sp/>old_table[i].hash);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.<ref refid="structdict__insert__result_1a325385b8d6787835cb03a2f364ab2c56" kindref="member">inserted</ref><sp/>||<sp/>!result.<ref refid="structdict__insert__result_1a9874e765273b8a34323b00166c989f2e" kindref="member">datum_ptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>=<sp/>old_table;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>=<sp/>old_size;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>old_count;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result.<ref refid="structdict__insert__result_1a9874e765273b8a34323b00166c989f2e" kindref="member">datum_ptr</ref><sp/>=<sp/>old_table[i].<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(old_table);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="hashtable2_8c_1a0046bedc02fbc13fc2ad5e63c6f6d65c" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a0046bedc02fbc13fc2ad5e63c6f6d65c" kindref="member">hashtable2_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*node<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*end<sp/>=<sp/>table-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>table-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>node<sp/>!=<sp/>end;<sp/>++node)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(table-&gt;<ref refid="structhashtable2_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>==<sp/>count);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*</highlight></codeline>
<codeline lineno="418" refid="hashtable2_8c_1a0c15f24c3e187b1c121a051ef62b8e43" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a0c15f24c3e187b1c121a051ef62b8e43" kindref="member">hashtable2_itor_new</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref><sp/>=<sp/>table;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*</highlight></codeline>
<codeline lineno="429" refid="hashtable2_8c_1a0ff5cf294222a238e6d3e51a2ba4dd3d" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a0ff5cf294222a238e6d3e51a2ba4dd3d" kindref="member">hashtable2_dict_itor_new</ref>(<ref refid="structhashtable2" kindref="compound">hashtable2</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*<sp/>itor<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(itor-&gt;<ref refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" kindref="member">_itor</ref><sp/>=<sp/><ref refid="hashtable2_8c_1a0c15f24c3e187b1c121a051ef62b8e43" kindref="member">hashtable2_itor_new</ref>(table)))<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(itor);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" kindref="member">_vtable</ref><sp/>=<sp/>&amp;hashtable2_itor_vtable;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="hashtable2_8c_1aa32b8b4ebed701351a7d4463c5f28dca" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1aa32b8b4ebed701351a7d4463c5f28dca" kindref="member">hashtable2_itor_free</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(itor);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="hashtable2_8c_1a2d78df14e4791b628483129358ffab7c" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a2d78df14e4791b628483129358ffab7c" kindref="member">hashtable2_itor_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>].<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="hashtable2_8c_1a7d7262bb936836d3456bae0c279503c8" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a7d7262bb936836d3456bae0c279503c8" kindref="member">hashtable2_itor_invalidate</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" kindref="member">hashtable2_itor_next</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>].<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="hashtable2_8c_1a368edbffbff8a943596091af2debd361" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a368edbffbff8a943596091af2debd361" kindref="member">hashtable2_itor_prev</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>].<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="hashtable2_8c_1a19fbc151fe7bca8c36a644b637ee9297" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a19fbc151fe7bca8c36a644b637ee9297" kindref="member">hashtable2_itor_nextn</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hashtable2_8c_1adbbfc37e889dffca71d67c12e29562b8" kindref="member">hashtable2_itor_next</ref>(itor))</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="hashtable2_8c_1ab66622dadb9e0b6ca52890478432214b" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1ab66622dadb9e0b6ca52890478432214b" kindref="member">hashtable2_itor_prevn</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hashtable2_8c_1a368edbffbff8a943596091af2debd361" kindref="member">hashtable2_itor_prev</ref>(itor))</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="hashtable2_8c_1abbb66009f907225aed01c996bbd46126" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1abbb66009f907225aed01c996bbd46126" kindref="member">hashtable2_itor_first</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>0;<sp/>slot<sp/>&lt;<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>++slot)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[slot].<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>(int)<sp/>slot;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="hashtable2_8c_1afb08ba6ed96ce232d98f263ffc9f993a" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1afb08ba6ed96ce232d98f263ffc9f993a" kindref="member">hashtable2_itor_last</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>slot<sp/>&gt;<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[--slot].<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>(int)<sp/>slot;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="hashtable2_8c_1afa082694a816bcfc2dd09d410c18ed00" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1afa082694a816bcfc2dd09d410c18ed00" kindref="member">hashtable2_itor_search</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>nonzero_hash(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>,<sp/>key);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>truncated_hash<sp/>=<sp/>hash<sp/>%<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>truncated_hash;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>*node<sp/>=<sp/>&amp;itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[index];</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>==<sp/>hash<sp/>&amp;&amp;<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>(int)<sp/>index;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++index<sp/>==<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(index<sp/>!=<sp/>truncated_hash);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="557" refid="hashtable2_8c_1acbfa355e5d41034d3e6a262b06b11dc5" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1acbfa355e5d41034d3e6a262b06b11dc5" kindref="member">hashtable2_itor_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&gt;=<sp/>0)<sp/>?<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>].<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="563" refid="hashtable2_8c_1a3b2ea9bc8254b9eda6a1fbf53ec83f3a" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a3b2ea9bc8254b9eda6a1fbf53ec83f3a" kindref="member">hashtable2_itor_datum</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&gt;=<sp/>0)<sp/>?<sp/>&amp;itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>].<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="hashtable2_8c_1a3b9d4a624ac364b31479b10409ef839a" refkind="member"><highlight class="normal"><ref refid="hashtable2_8c_1a3b9d4a624ac364b31479b10409ef839a" kindref="member">hashtable2_itor_remove</ref>(<ref refid="structhashtable2__itor" kindref="compound">hashtable2_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>remove_node(itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref>[itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>].<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>%<sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1ac39287fa1fbff323f1764c7902c9e718" kindref="member">table</ref>-&gt;<ref refid="structhashtable2_1a653e97fd0c756741d6c277dd97afede8" kindref="member">table</ref><sp/>+<sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable2__itor_1a83d6e2127b4cc5e01f2012608487d31a" kindref="member">slot</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/hashtable2.c"/>
  </compounddef>
</doxygen>
