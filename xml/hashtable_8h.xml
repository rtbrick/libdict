<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="hashtable_8h" kind="file" language="C++">
    <compoundname>hashtable.h</compoundname>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includedby refid="dict_8h" local="yes">include/dict.h</includedby>
    <includedby refid="hashtable_8c" local="yes">src/hashtable.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/dict.c</label>
        <link refid="dict_8c"/>
      </node>
      <node id="19">
        <label>src/dict_private.h</label>
        <link refid="dict__private_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/hashtable.c</label>
        <link refid="hashtable_8c"/>
      </node>
      <node id="4">
        <label>src/hashtable2.c</label>
        <link refid="hashtable2_8c"/>
      </node>
      <node id="6">
        <label>src/hb_tree.c</label>
        <link refid="hb__tree_8c"/>
      </node>
      <node id="8">
        <label>src/pr_tree.c</label>
        <link refid="pr__tree_8c"/>
      </node>
      <node id="10">
        <label>src/rb_tree.c</label>
        <link refid="rb__tree_8c"/>
      </node>
      <node id="12">
        <label>src/skiplist.c</label>
        <link refid="skiplist_8c"/>
      </node>
      <node id="14">
        <label>src/sp_tree.c</label>
        <link refid="sp__tree_8c"/>
      </node>
      <node id="16">
        <label>src/tr_tree.c</label>
        <link refid="tr__tree_8c"/>
      </node>
      <node id="22">
        <label>src/tree_common.c</label>
        <link refid="tree__common_8c"/>
      </node>
      <node id="23">
        <label>src/tree_common.h</label>
        <link refid="tree__common_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/wb_tree.c</label>
        <link refid="wb__tree_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hashtable_8h_1a70220a04ca914ec91d54260b4608234a" prot="public" static="no">
        <type>struct <ref refid="structhashtable" kindref="compound">hashtable</ref></type>
        <definition>typedef struct hashtable hashtable</definition>
        <argsstring></argsstring>
        <name>hashtable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="35" column="24" bodyfile="include/hashtable.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hashtable_8h_1ada354ce7ebae1d38e3b3636b1900c8f4" prot="public" static="no">
        <type>struct <ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref></type>
        <definition>typedef struct hashtable_itor hashtable_itor</definition>
        <argsstring></argsstring>
        <name>hashtable_itor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="54" column="29" bodyfile="include/hashtable.h" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hashtable_8h_1af455c560cff947a8088f557ab119795a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
        <definition>hashtable * hashtable_new</definition>
        <argsstring>(dict_compare_func cmp_func, dict_hash_func hash_func, unsigned size)</argsstring>
        <name>hashtable_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="37" column="16" bodyfile="src/hashtable.c" bodystart="111" bodyend="131" declfile="include/hashtable.h" declline="37" declcolumn="16"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
        <references refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" compoundref="hashtable__common_8c" startline="41" endline="48">dict_prime_geq</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1abbe4b0247e04c69486fe907df6b34849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict" kindref="compound">dict</ref> *</type>
        <definition>dict * hashtable_dict_new</definition>
        <argsstring>(dict_compare_func cmp_func, dict_hash_func hash_func, unsigned size)</argsstring>
        <name>hashtable_dict_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="38" column="16" bodyfile="src/hashtable.c" bodystart="134" bodyend="149" declfile="include/hashtable.h" declline="38" declcolumn="16"/>
        <references refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" compoundref="dict_8h" startline="152">dict::_object</references>
        <references refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" compoundref="dict_8h" startline="153">dict::_vtable</references>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable_8c_1af455c560cff947a8088f557ab119795a" compoundref="hashtable_8c" startline="111" endline="131">hashtable_new</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_free</definition>
        <argsstring>(hashtable *table, dict_delete_func delete_func)</argsstring>
        <name>hashtable_free</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="39" column="17" bodyfile="src/hashtable.c" bodystart="152" bodyend="160" declfile="include/hashtable.h" declline="39" declcolumn="17"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" compoundref="hashtable_8c" startline="251" endline="268">hashtable_clear</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a67bcbfe82dc7d75e26d28e82593de9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></type>
        <definition>dict_insert_result hashtable_insert</definition>
        <argsstring>(hashtable *table, void *key)</argsstring>
        <name>hashtable_insert</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="42" column="17" bodyfile="src/hashtable.c" bodystart="163" bodyend="201" declfile="include/hashtable.h" declline="42" declcolumn="17"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="hashtable_8c_1a99a194118712fc1cfc4e3d954c9887a7" compoundref="hashtable_8c" startline="307" endline="348">hashtable_resize</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="hashtable_8c_1a58651144f26400509df7a63f76c972c9" compoundref="hashtable_8c" startline="40">LOADFACTOR_DENOMINATOR</references>
        <references refid="hashtable_8c_1a24e21f497bc214e2c211c4bed541bdf8" compoundref="hashtable_8c" startline="39">LOADFACTOR_NUMERATOR</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" compoundref="hashtable_8c" startline="53">hash_node::prev</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1acf6fe1dbd03b91f46fa0c2cc9b36f455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** hashtable_search</definition>
        <argsstring>(hashtable *table, const void *key)</argsstring>
        <name>hashtable_search</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="43" column="15" bodyfile="src/hashtable.c" bodystart="204" bodyend="215" declfile="include/hashtable.h" declline="43" declcolumn="15"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a2f60f28533279fae7e1b46de945986c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></type>
        <definition>dict_remove_result hashtable_remove</definition>
        <argsstring>(hashtable *table, const void *key)</argsstring>
        <name>hashtable_remove</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="45" column="17" bodyfile="src/hashtable.c" bodystart="233" bodyend="248" declfile="include/hashtable.h" declline="45" declcolumn="17"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1aae522c5e1cb380ff321c81d21b3c6f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_clear</definition>
        <argsstring>(hashtable *table, dict_delete_func delete_func)</argsstring>
        <name>hashtable_clear</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="46" column="17" bodyfile="src/hashtable.c" bodystart="251" bodyend="268" declfile="include/hashtable.h" declline="46" declcolumn="17"/>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1ab48ef7547bc43acd328f97dd8695250a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_traverse</definition>
        <argsstring>(hashtable *table, dict_visit_func visit, void *user_data)</argsstring>
        <name>hashtable_traverse</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref></type>
          <declname>visit</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="47" column="17" bodyfile="src/hashtable.c" bodystart="271" bodyend="282" declfile="include/hashtable.h" declline="47" declcolumn="17"/>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_count</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_count</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="48" column="17" bodyfile="src/hashtable.c" bodystart="285" bodyend="288" declfile="include/hashtable.h" declline="48" declcolumn="17"/>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1ad37da2d98910ad7ad07a9bd325128e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_size</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_size</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="49" column="17" bodyfile="src/hashtable.c" bodystart="291" bodyend="294" declfile="include/hashtable.h" declline="49" declcolumn="17"/>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1ae4e6def277e47c1ed3088462dbf6b652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_slots_used</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_slots_used</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="50" column="17" bodyfile="src/hashtable.c" bodystart="297" bodyend="304" declfile="include/hashtable.h" declline="50" declcolumn="17"/>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a4470d170573e6d2d398cfa38e4a828cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_verify</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_verify</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="51" column="17" bodyfile="src/hashtable.c" bodystart="351" bodyend="369" declfile="include/hashtable.h" declline="51" declcolumn="17"/>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" compoundref="dict__private_8h" startline="78" endline="85">VERIFY</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a257683480baebb03b82de91168276e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_resize</definition>
        <argsstring>(hashtable *table, unsigned size)</argsstring>
        <name>hashtable_resize</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="52" column="17" bodyfile="src/hashtable.c" bodystart="307" bodyend="348" declfile="include/hashtable.h" declline="52" declcolumn="17"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" compoundref="hashtable__common_8c" startline="41" endline="48">dict_prime_geq</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" compoundref="hashtable_8c" startline="53">hash_node::prev</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a42ef1560386cd5b2ed4bbda89066305a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
        <definition>hashtable_itor * hashtable_itor_new</definition>
        <argsstring>(hashtable *table)</argsstring>
        <name>hashtable_itor_new</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="56" column="16" bodyfile="src/hashtable.c" bodystart="372" bodyend="381" declfile="include/hashtable.h" declline="56" declcolumn="16"/>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a395e03d6fb1a673dacfa87784d9c1bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__itor" kindref="compound">dict_itor</ref> *</type>
        <definition>dict_itor * hashtable_dict_itor_new</definition>
        <argsstring>(hashtable *table)</argsstring>
        <name>hashtable_dict_itor_new</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="57" column="16" bodyfile="src/hashtable.c" bodystart="384" bodyend="395" declfile="include/hashtable.h" declline="57" declcolumn="16"/>
        <references refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" compoundref="dict_8h" startline="175">dict_itor::_itor</references>
        <references refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" compoundref="dict_8h" startline="176">dict_itor::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable_8c_1a42ef1560386cd5b2ed4bbda89066305a" compoundref="hashtable_8c" startline="372" endline="381">hashtable_itor_new</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a8ac2a4cbf94617859785461561ac6641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashtable_itor_free</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_free</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="58" column="17" bodyfile="src/hashtable.c" bodystart="398" bodyend="401" declfile="include/hashtable.h" declline="58" declcolumn="17"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1abefb05d066d3a1c9183bf8104667bce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_valid</definition>
        <argsstring>(const hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_valid</name>
        <param>
          <type>const <ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="60" column="17" bodyfile="src/hashtable.c" bodystart="404" bodyend="407" declfile="include/hashtable.h" declline="60" declcolumn="17"/>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1ab22306e18adca4372e681f440d9f15bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashtable_itor_invalidate</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_invalidate</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="61" column="17" bodyfile="src/hashtable.c" bodystart="410" bodyend="414" declfile="include/hashtable.h" declline="61" declcolumn="17"/>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a4640047b70788f6af358e36e4a35ecdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_next</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_next</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="62" column="17" bodyfile="src/hashtable.c" bodystart="417" bodyend="436" declfile="include/hashtable.h" declline="62" declcolumn="17"/>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1ab147d632aca389887973e15b382e070d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_prev</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_prev</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="63" column="17" bodyfile="src/hashtable.c" bodystart="439" bodyend="461" declfile="include/hashtable.h" declline="63" declcolumn="17"/>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" compoundref="hashtable_8c" startline="53">hash_node::prev</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1aac4843e885adc5e4d700748ebf2c5230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_nextn</definition>
        <argsstring>(hashtable_itor *itor, size_t count)</argsstring>
        <name>hashtable_itor_nextn</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="64" column="17" bodyfile="src/hashtable.c" bodystart="464" bodyend="471" declfile="include/hashtable.h" declline="64" declcolumn="17"/>
        <references refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" compoundref="hashtable_8c" startline="417" endline="436">hashtable_itor_next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a4d9108429e134d8b6c06bf108677f77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_prevn</definition>
        <argsstring>(hashtable_itor *itor, size_t count)</argsstring>
        <name>hashtable_itor_prevn</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="65" column="17" bodyfile="src/hashtable.c" bodystart="474" bodyend="481" declfile="include/hashtable.h" declline="65" declcolumn="17"/>
        <references refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" compoundref="hashtable_8c" startline="439" endline="461">hashtable_itor_prev</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a4af5cb02f974fcafb9cbd486e273eca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_first</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_first</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="66" column="17" bodyfile="src/hashtable.c" bodystart="484" bodyend="496" declfile="include/hashtable.h" declline="66" declcolumn="17"/>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a45f1d8e870f55a93a8aa7c6f11124080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_last</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_last</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="67" column="17" bodyfile="src/hashtable.c" bodystart="499" bodyend="514" declfile="include/hashtable.h" declline="67" declcolumn="17"/>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a2618afdd980763175fab2a23333fb4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_search</definition>
        <argsstring>(hashtable_itor *itor, const void *key)</argsstring>
        <name>hashtable_itor_search</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="68" column="17" bodyfile="src/hashtable.c" bodystart="517" bodyend="533" declfile="include/hashtable.h" declline="68" declcolumn="17"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1ae5ecbe4b9400383290c704d35c7c9054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * hashtable_itor_key</definition>
        <argsstring>(const hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_key</name>
        <param>
          <type>const <ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="69" column="16" bodyfile="src/hashtable.c" bodystart="536" bodyend="539" declfile="include/hashtable.h" declline="69" declcolumn="16"/>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a70ff976a76185ee4e9024bfa7b1b02bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** hashtable_itor_datum</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_datum</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="70" column="15" bodyfile="src/hashtable.c" bodystart="542" bodyend="545" declfile="include/hashtable.h" declline="70" declcolumn="15"/>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8h_1a7ba59e801312dab3714273fd4d060fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_remove</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_remove</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashtable.h" line="71" column="17" bodyfile="src/hashtable.c" bodystart="548" bodyend="555" declfile="include/hashtable.h" declline="71" declcolumn="17"/>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libdict<sp/>--<sp/>hash-value<sp/>sorted,<sp/>chained<sp/>hash-table<sp/>interface.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001-2014,<sp/>Farooq<sp/>Mela</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBDICT_HASHTABLE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBDICT_HASHTABLE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="dict_8h_1a0c5f0f7b40e3b3df5aaa4c5e3c874b3b" kindref="member">BEGIN_DECL</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="hashtable_8h_1a70220a04ca914ec91d54260b4608234a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhashtable" kindref="compound">hashtable</ref><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1af455c560cff947a8088f557ab119795a" kindref="member">hashtable_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>,<sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/><ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="structdict" kindref="compound">dict</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1abbe4b0247e04c69486fe907df6b34849" kindref="member">hashtable_dict_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>,<sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/><ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" kindref="member">hashtable_free</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a67bcbfe82dc7d75e26d28e82593de9ca" kindref="member">hashtable_insert</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1acf6fe1dbd03b91f46fa0c2cc9b36f455" kindref="member">hashtable_search</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a2f60f28533279fae7e1b46de945986c5" kindref="member">hashtable_remove</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1aae522c5e1cb380ff321c81d21b3c6f08" kindref="member">hashtable_clear</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1ab48ef7547bc43acd328f97dd8695250a" kindref="member">hashtable_traverse</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref><sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" kindref="member">hashtable_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1ad37da2d98910ad7ad07a9bd325128e45" kindref="member">hashtable_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1ae4e6def277e47c1ed3088462dbf6b652" kindref="member">hashtable_slots_used</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a4470d170573e6d2d398cfa38e4a828cd" kindref="member">hashtable_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a257683480baebb03b82de91168276e58" kindref="member">hashtable_resize</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="hashtable_8h_1ada354ce7ebae1d38e3b3636b1900c8f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref><sp/><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="hashtable_8h_1a42ef1560386cd5b2ed4bbda89066305a" kindref="member">hashtable_itor_new</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a395e03d6fb1a673dacfa87784d9c1bba" kindref="member">hashtable_dict_itor_new</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a8ac2a4cbf94617859785461561ac6641" kindref="member">hashtable_itor_free</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1abefb05d066d3a1c9183bf8104667bce9" kindref="member">hashtable_itor_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1ab22306e18adca4372e681f440d9f15bd" kindref="member">hashtable_itor_invalidate</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a4640047b70788f6af358e36e4a35ecdd" kindref="member">hashtable_itor_next</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1ab147d632aca389887973e15b382e070d" kindref="member">hashtable_itor_prev</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1aac4843e885adc5e4d700748ebf2c5230" kindref="member">hashtable_itor_nextn</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a4d9108429e134d8b6c06bf108677f77b" kindref="member">hashtable_itor_prevn</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a4af5cb02f974fcafb9cbd486e273eca1" kindref="member">hashtable_itor_first</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a45f1d8e870f55a93a8aa7c6f11124080" kindref="member">hashtable_itor_last</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a2618afdd980763175fab2a23333fb4a9" kindref="member">hashtable_itor_search</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1ae5ecbe4b9400383290c704d35c7c9054" kindref="member">hashtable_itor_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a70ff976a76185ee4e9024bfa7b1b02bd" kindref="member">hashtable_itor_datum</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8h_1a7ba59e801312dab3714273fd4d060fe8" kindref="member">hashtable_itor_remove</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">itor</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="dict_8h_1acca589e3adebef8ed4e5bed6dea40ebb" kindref="member">END_DECL</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!LIBDICT_HASHTABLE_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/hashtable.h"/>
  </compounddef>
</doxygen>
