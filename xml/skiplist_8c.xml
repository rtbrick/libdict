<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="skiplist_8c" kind="file" language="C++">
    <compoundname>skiplist.c</compoundname>
    <includes refid="skiplist_8h" local="yes">skiplist.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="dict__private_8h" local="yes">dict_private.h</includes>
    <incdepgraph>
      <node id="3">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dict_private.h</label>
        <link refid="dict__private_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/skiplist.c</label>
        <link refid="skiplist_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
      <node id="18">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structskip__node" prot="public">skip_node</innerclass>
    <innerclass refid="structskiplist" prot="public">skiplist</innerclass>
    <innerclass refid="structskiplist__itor" prot="public">skiplist_itor</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" prot="public" static="no">
        <name>MAX_LINK</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="47" column="9" bodyfile="src/skiplist.c" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="skiplist_8c_1a50e428cd0dfc84ac5e72fb3ae9595a37" prot="public" static="no">
        <type>struct <ref refid="structskip__node" kindref="compound">skip_node</ref></type>
        <definition>typedef struct skip_node skip_node</definition>
        <argsstring></argsstring>
        <name>skip_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="37" column="24" bodyfile="src/skiplist.c" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="skiplist_8c_1a9ae78b7e22c15dd4be10a2afaf18ad37" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structdict__vtable" kindref="compound">dict_vtable</ref></type>
        <definition>const dict_vtable skiplist_vtable</definition>
        <argsstring></argsstring>
        <name>skiplist_vtable</name>
        <initializer>= {
    true,
    (<ref refid="dict_8h_1ad70c6127784fe473398838a4ca7ee0e8" kindref="member">dict_inew_func</ref>)	    <ref refid="skiplist_8c_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" kindref="member">skiplist_dict_itor_new</ref>,
    (<ref refid="dict_8h_1a861d296c134c416c965b8e2117cda33a" kindref="member">dict_dfree_func</ref>)	    <ref refid="skiplist_8c_1a824d0126c8f9bfdb2a80a357f1846909" kindref="member">skiplist_free</ref>,
    (<ref refid="dict_8h_1a526ec5a7be277ebf2fb509362b6b2f0c" kindref="member">dict_insert_func</ref>)	    <ref refid="skiplist_8c_1ad4842554437de6ab010bb84006b8bf39" kindref="member">skiplist_insert</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    <ref refid="skiplist_8c_1a482f4582ee618e6daefc99e64fcebc59" kindref="member">skiplist_search</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    <ref refid="skiplist_8c_1a373602310b3d20ab40e7634d719081f0" kindref="member">skiplist_search_le</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    <ref refid="skiplist_8c_1ab71061e35d511edaf582707c024d5629" kindref="member">skiplist_search_lt</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    <ref refid="skiplist_8c_1a98fbe7bcb19546c9e3695eaa592b6b02" kindref="member">skiplist_search_ge</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)	    <ref refid="skiplist_8c_1a8b8f7145975eff26a2d358a7ab60652f" kindref="member">skiplist_search_gt</ref>,
    (<ref refid="dict_8h_1a03ac901668905b999c543bd504ce6049" kindref="member">dict_remove_func</ref>)	    <ref refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" kindref="member">skiplist_remove</ref>,
    (<ref refid="dict_8h_1af10d9833546e8a985bf8a21e7cca9c39" kindref="member">dict_clear_func</ref>)	    <ref refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" kindref="member">skiplist_clear</ref>,
    (<ref refid="dict_8h_1a465ab0c48a0c2920bd4a4d2119dde513" kindref="member">dict_traverse_func</ref>)    <ref refid="skiplist_8c_1a15170e44c991e2f0710781da66693072" kindref="member">skiplist_traverse</ref>,
    (<ref refid="dict_8h_1a18186f71a497454b44c31cd4737594fc" kindref="member">dict_select_func</ref>)	    NULL,
    (<ref refid="dict_8h_1a6c85f33ba34353d8433b41377053f882" kindref="member">dict_count_func</ref>)	    <ref refid="skiplist_8c_1aeab0378a37def72ea8c518e1f44a1b33" kindref="member">skiplist_count</ref>,
    (<ref refid="dict_8h_1aeb7fec8d69b3fc9802e46e7d3eae4d41" kindref="member">dict_verify_func</ref>)	    <ref refid="skiplist_8c_1a4df47d9ff2ce6126c15bc80d9423bdf1" kindref="member">skiplist_verify</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="62" column="26" bodyfile="src/skiplist.c" bodystart="62" bodyend="78"/>
      </memberdef>
      <memberdef kind="variable" id="skiplist_8c_1a8312192ddda59c8d5a8dd192b1634b7c" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structitor__vtable" kindref="compound">itor_vtable</ref></type>
        <definition>const itor_vtable skiplist_itor_vtable</definition>
        <argsstring></argsstring>
        <name>skiplist_itor_vtable</name>
        <initializer>= {
    (<ref refid="dict_8h_1af7abde3da86249ff4c3d19f5e62e7617" kindref="member">dict_ifree_func</ref>)	    <ref refid="skiplist_8c_1ad31dfafa1f916757efc48eb41f4040f1" kindref="member">skiplist_itor_free</ref>,
    (<ref refid="dict_8h_1a66d8fb8461e0c7c72407c33f9eb1fc92" kindref="member">dict_valid_func</ref>)	    <ref refid="skiplist_8c_1a8c9a8ef464827a0ae56e66063b632b02" kindref="member">skiplist_itor_valid</ref>,
    (<ref refid="dict_8h_1a1fdd9cad34cc517ad72e999498333195" kindref="member">dict_invalidate_func</ref>)  <ref refid="skiplist_8c_1a83a1a0a8199354a84a74bc69785d48d2" kindref="member">skiplist_itor_invalidate</ref>,
    (<ref refid="dict_8h_1a70987d3f887eb81f7ff4fb344bf09859" kindref="member">dict_next_func</ref>)	    <ref refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" kindref="member">skiplist_itor_next</ref>,
    (<ref refid="dict_8h_1ad0f023b37e2af0590e30cba3ebb779bf" kindref="member">dict_prev_func</ref>)	    <ref refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" kindref="member">skiplist_itor_prev</ref>,
    (<ref refid="dict_8h_1a65f11df3f83a7ffe796598fc3efead7d" kindref="member">dict_nextn_func</ref>)	    <ref refid="skiplist_8c_1ad6fcce69c6f6ce1e613554bbb2137953" kindref="member">skiplist_itor_nextn</ref>,
    (<ref refid="dict_8h_1aaf7eb283d05ac82c2a7f32d39286c888" kindref="member">dict_prevn_func</ref>)	    <ref refid="skiplist_8c_1a80b0fe3e44974d0317096d4c9bc85d75" kindref="member">skiplist_itor_prevn</ref>,
    (<ref refid="dict_8h_1a6e5c0bb6cb2131da31fdb2c1b363a734" kindref="member">dict_first_func</ref>)	    <ref refid="skiplist_8c_1a6647c65a42000e933fc047a2ff1077af" kindref="member">skiplist_itor_first</ref>,
    (<ref refid="dict_8h_1adc800add5456e9c0d9fd2f4f8f8b868f" kindref="member">dict_last_func</ref>)	    <ref refid="skiplist_8c_1af97c68bce2728f1b15bbcf2d9ce32a68" kindref="member">skiplist_itor_last</ref>,
    (<ref refid="dict_8h_1a7969590b6825845cd1e644d05b4fa300" kindref="member">dict_key_func</ref>)	    <ref refid="skiplist_8c_1a88b927a970f40fe40eb161fc14c88fa2" kindref="member">skiplist_itor_key</ref>,
    (<ref refid="dict_8h_1aa24f05bcc6368e21bc8774eec9fb3a17" kindref="member">dict_datum_func</ref>)	    <ref refid="skiplist_8c_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" kindref="member">skiplist_itor_datum</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    <ref refid="skiplist_8c_1a4adae95e07dd7e8478ce673218a54ed2" kindref="member">skiplist_itor_search</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    <ref refid="skiplist_8c_1a0067bbc33ec62d152bb64cd6993ff049" kindref="member">skiplist_itor_search_le</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    <ref refid="skiplist_8c_1a8c0239dbe5d95238b677ddc22e80f27d" kindref="member">skiplist_itor_search_lt</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    <ref refid="skiplist_8c_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" kindref="member">skiplist_itor_search_ge</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)	    <ref refid="skiplist_8c_1a2e73ff31a8023637eaa66e43cccb0075" kindref="member">skiplist_itor_search_gt</ref>,
    (<ref refid="dict_8h_1ad01841eadd81f6b6eb68a1809aa7c7a1" kindref="member">dict_iremove_func</ref>)	    <ref refid="skiplist_8c_1a33ddbfa076ade530bcdd0079ec4aa506" kindref="member">skiplist_itor_remove</ref>,
    (<ref refid="dict_8h_1a64ed8ac945518e5d17e23a5d640fc5ef" kindref="member">dict_icompare_func</ref>)    <ref refid="skiplist_8c_1aaa479df9fd2242cb344db95e1a747708" kindref="member">skiplist_itor_compare</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="80" column="26" bodyfile="src/skiplist.c" bodystart="80" bodyend="99"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="skiplist_8c_1a035540716c81ddbe09e3bb4a2723131a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
        <definition>static skip_node * node_new</definition>
        <argsstring>(void *key, unsigned link_count)</argsstring>
        <name>node_new</name>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>link_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="668" column="1" bodyfile="src/skiplist.c" bodystart="668" bodyend="682" declfile="src/skiplist.c" declline="101" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a410e4e7e4476510b7e94195e2892adc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void node_insert</definition>
        <argsstring>(skiplist *list, skip_node *x, skip_node **update)</argsstring>
        <name>node_insert</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structskip__node" kindref="compound">skip_node</ref> **</type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="158" column="1" bodyfile="src/skiplist.c" bodystart="158" bodyend="180" declfile="src/skiplist.c" declline="102" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a5a203a8dc84d9a8bd80e99a522df7263" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
        <definition>static skip_node * node_search</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>node_search</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="213" column="1" bodyfile="src/skiplist.c" bodystart="213" bodyend="232" declfile="src/skiplist.c" declline="103" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1abbdc2e179b35789cb5bf639a4da47ceb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
        <definition>static skip_node * node_search_le</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>node_search_le</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="235" column="1" bodyfile="src/skiplist.c" bodystart="235" bodyend="254" declfile="src/skiplist.c" declline="104" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a7319d2f31fa659786c9aa4c1869c4265" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
        <definition>static skip_node * node_search_lt</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>node_search_lt</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="257" column="1" bodyfile="src/skiplist.c" bodystart="257" bodyend="276" declfile="src/skiplist.c" declline="105" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a575e51e691ba81b340d7c6857ee3645e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
        <definition>static skip_node * node_search_ge</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>node_search_ge</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="279" column="1" bodyfile="src/skiplist.c" bodystart="279" bodyend="300" declfile="src/skiplist.c" declline="106" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a252362c3645a185f875c6a3822d19128" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structskip__node" kindref="compound">skip_node</ref> *</type>
        <definition>static skip_node * node_search_gt</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>node_search_gt</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="303" column="1" bodyfile="src/skiplist.c" bodystart="303" bodyend="324" declfile="src/skiplist.c" declline="107" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a165e9732c1573408245d7ca319245ff0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>static unsigned rand_link_count</definition>
        <argsstring>(skiplist *list)</argsstring>
        <name>rand_link_count</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="685" column="1" bodyfile="src/skiplist.c" bodystart="685" bodyend="689" declfile="src/skiplist.c" declline="108" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a163c5a84a8d9796d5a382824734d041c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
        <definition>skiplist * skiplist_new</definition>
        <argsstring>(dict_compare_func cmp_func, unsigned max_link)</argsstring>
        <name>skiplist_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>max_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="111" column="1" bodyfile="src/skiplist.c" bodystart="111" bodyend="132"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" compoundref="skiplist_8c" startline="47">MAX_LINK</references>
        <references refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" compoundref="skiplist_8c" startline="51">skiplist::max_link</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a97d5ef497ad5c8b0b14c59097c0efa6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict" kindref="compound">dict</ref> *</type>
        <definition>dict * skiplist_dict_new</definition>
        <argsstring>(dict_compare_func cmp_func, unsigned max_link)</argsstring>
        <name>skiplist_dict_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>max_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="135" column="1" bodyfile="src/skiplist.c" bodystart="135" bodyend="146"/>
        <references refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" compoundref="dict_8h" startline="152">dict::_object</references>
        <references refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" compoundref="dict_8h" startline="153">dict::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="skiplist_8c_1a163c5a84a8d9796d5a382824734d041c" compoundref="skiplist_8c" startline="111" endline="132">skiplist_new</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a824d0126c8f9bfdb2a80a357f1846909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_free</definition>
        <argsstring>(skiplist *list, dict_delete_func delete_func)</argsstring>
        <name>skiplist_free</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="149" column="1" bodyfile="src/skiplist.c" bodystart="149" bodyend="155"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" compoundref="skiplist_8c" startline="409" endline="427">skiplist_clear</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1ad4842554437de6ab010bb84006b8bf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></type>
        <definition>dict_insert_result skiplist_insert</definition>
        <argsstring>(skiplist *list, void *key)</argsstring>
        <name>skiplist_insert</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="183" column="1" bodyfile="src/skiplist.c" bodystart="183" bodyend="210"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" compoundref="skiplist_8c" startline="43">skip_node::link_count</references>
        <references refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" compoundref="skiplist_8c" startline="47">MAX_LINK</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a482f4582ee618e6daefc99e64fcebc59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="327" column="1" bodyfile="src/skiplist.c" bodystart="327" bodyend="331"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a373602310b3d20ab40e7634d719081f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_le</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_le</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="334" column="1" bodyfile="src/skiplist.c" bodystart="334" bodyend="338"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1ab71061e35d511edaf582707c024d5629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_lt</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_lt</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="341" column="1" bodyfile="src/skiplist.c" bodystart="341" bodyend="345"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a98fbe7bcb19546c9e3695eaa592b6b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_ge</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_ge</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="348" column="1" bodyfile="src/skiplist.c" bodystart="348" bodyend="352"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a8b8f7145975eff26a2d358a7ab60652f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_gt</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_gt</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="355" column="1" bodyfile="src/skiplist.c" bodystart="355" bodyend="359"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></type>
        <definition>dict_remove_result skiplist_remove</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_remove</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="362" column="1" bodyfile="src/skiplist.c" bodystart="362" bodyend="406"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" compoundref="skiplist_8c" startline="43">skip_node::link_count</references>
        <references refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" compoundref="skiplist_8c" startline="47">MAX_LINK</references>
        <references refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" compoundref="skiplist_8c" startline="42">skip_node::prev</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_clear</definition>
        <argsstring>(skiplist *list, dict_delete_func delete_func)</argsstring>
        <name>skiplist_clear</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="409" column="1" bodyfile="src/skiplist.c" bodystart="409" bodyend="427"/>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a15170e44c991e2f0710781da66693072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_traverse</definition>
        <argsstring>(skiplist *list, dict_visit_func visit, void *user_data)</argsstring>
        <name>skiplist_traverse</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref></type>
          <declname>visit</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="430" column="1" bodyfile="src/skiplist.c" bodystart="430" bodyend="439"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1aeab0378a37def72ea8c518e1f44a1b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_count</definition>
        <argsstring>(const skiplist *list)</argsstring>
        <name>skiplist_count</name>
        <param>
          <type>const <ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="442" column="1" bodyfile="src/skiplist.c" bodystart="442" bodyend="445"/>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a4df47d9ff2ce6126c15bc80d9423bdf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_verify</definition>
        <argsstring>(const skiplist *list)</argsstring>
        <name>skiplist_verify</name>
        <param>
          <type>const <ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="448" column="1" bodyfile="src/skiplist.c" bodystart="448" bodyend="484"/>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" compoundref="skiplist_8c" startline="43">skip_node::link_count</references>
        <references refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" compoundref="skiplist_8c" startline="51">skiplist::max_link</references>
        <references refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" compoundref="skiplist_8c" startline="42">skip_node::prev</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
        <references refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" compoundref="dict__private_8h" startline="78" endline="85">VERIFY</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1af9d82cffc987f421df8743706ac80538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_link_count_histogram</definition>
        <argsstring>(const skiplist *list, size_t counts[], size_t ncounts)</argsstring>
        <name>skiplist_link_count_histogram</name>
        <param>
          <type>const <ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>counts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>ncounts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="487" column="1" bodyfile="src/skiplist.c" bodystart="487" bodyend="500"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1adbe33aa562dee4fa3e409b3544203780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
        <definition>skiplist_itor * skiplist_itor_new</definition>
        <argsstring>(skiplist *list)</argsstring>
        <name>skiplist_itor_new</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="503" column="1" bodyfile="src/skiplist.c" bodystart="503" bodyend="511"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__itor" kindref="compound">dict_itor</ref> *</type>
        <definition>dict_itor * skiplist_dict_itor_new</definition>
        <argsstring>(skiplist *list)</argsstring>
        <name>skiplist_dict_itor_new</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="514" column="1" bodyfile="src/skiplist.c" bodystart="514" bodyend="525"/>
        <references refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" compoundref="dict_8h" startline="174">dict_itor::_itor</references>
        <references refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" compoundref="dict_8h" startline="175">dict_itor::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="skiplist_8c_1adbe33aa562dee4fa3e409b3544203780" compoundref="skiplist_8c" startline="503" endline="511">skiplist_itor_new</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1ad31dfafa1f916757efc48eb41f4040f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void skiplist_itor_free</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_free</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="528" column="1" bodyfile="src/skiplist.c" bodystart="528" bodyend="531"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a8c9a8ef464827a0ae56e66063b632b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_valid</definition>
        <argsstring>(const skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_valid</name>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="534" column="1" bodyfile="src/skiplist.c" bodystart="534" bodyend="537"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a83a1a0a8199354a84a74bc69785d48d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void skiplist_itor_invalidate</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_invalidate</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="540" column="1" bodyfile="src/skiplist.c" bodystart="540" bodyend="543"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_next</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_next</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="546" column="1" bodyfile="src/skiplist.c" bodystart="546" bodyend="551"/>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1afa49a5994bef26a067229baf829757da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_prev</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_prev</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="554" column="1" bodyfile="src/skiplist.c" bodystart="554" bodyend="559"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" compoundref="skiplist_8c" startline="42">skip_node::prev</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1ad6fcce69c6f6ce1e613554bbb2137953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_nextn</definition>
        <argsstring>(skiplist_itor *itor, size_t count)</argsstring>
        <name>skiplist_itor_nextn</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="562" column="1" bodyfile="src/skiplist.c" bodystart="562" bodyend="568"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" compoundref="skiplist_8c" startline="546" endline="551">skiplist_itor_next</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a80b0fe3e44974d0317096d4c9bc85d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_prevn</definition>
        <argsstring>(skiplist_itor *itor, size_t count)</argsstring>
        <name>skiplist_itor_prevn</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="571" column="1" bodyfile="src/skiplist.c" bodystart="571" bodyend="577"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" compoundref="skiplist_8c" startline="554" endline="559">skiplist_itor_prev</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a6647c65a42000e933fc047a2ff1077af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_first</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_first</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="580" column="1" bodyfile="src/skiplist.c" bodystart="580" bodyend="583"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1af97c68bce2728f1b15bbcf2d9ce32a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_last</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_last</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="586" column="1" bodyfile="src/skiplist.c" bodystart="586" bodyend="600"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a4adae95e07dd7e8478ce673218a54ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="603" column="1" bodyfile="src/skiplist.c" bodystart="603" bodyend="606"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a0067bbc33ec62d152bb64cd6993ff049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_le</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_le</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="609" column="1" bodyfile="src/skiplist.c" bodystart="609" bodyend="612"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a8c0239dbe5d95238b677ddc22e80f27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_lt</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_lt</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="615" column="1" bodyfile="src/skiplist.c" bodystart="615" bodyend="618"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_ge</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_ge</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="621" column="1" bodyfile="src/skiplist.c" bodystart="621" bodyend="624"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a2e73ff31a8023637eaa66e43cccb0075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_gt</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_gt</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="627" column="1" bodyfile="src/skiplist.c" bodystart="627" bodyend="630"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a88b927a970f40fe40eb161fc14c88fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * skiplist_itor_key</definition>
        <argsstring>(const skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_key</name>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="633" column="1" bodyfile="src/skiplist.c" bodystart="633" bodyend="636"/>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_itor_datum</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_datum</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="639" column="1" bodyfile="src/skiplist.c" bodystart="639" bodyend="642"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1aaa479df9fd2242cb344db95e1a747708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int skiplist_itor_compare</definition>
        <argsstring>(const skiplist_itor *itor1, const skiplist_itor *itor2)</argsstring>
        <name>skiplist_itor_compare</name>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor1</declname>
        </param>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="645" column="1" bodyfile="src/skiplist.c" bodystart="645" bodyend="653"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8c_1a33ddbfa076ade530bcdd0079ec4aa506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_remove</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_remove</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/skiplist.c" line="656" column="1" bodyfile="src/skiplist.c" bodystart="656" bodyend="665"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="structdict__remove__result_1a3b6ac8b02ffc67e7ac109edf6dca3ceb" compoundref="dict_8h" startline="81">dict_remove_result::removed</references>
        <references refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" compoundref="skiplist_8c" startline="362" endline="406">skiplist_remove</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libdict<sp/>--<sp/>skiplist<sp/>implementation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001-2014,<sp/>Farooq<sp/>Mela</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>cf.<sp/>[Pugh<sp/>1990],<sp/>[Sedgewick<sp/>1998]</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="skiplist_8h" kindref="compound">skiplist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>memset()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict__private_8h" kindref="compound">dict_private.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="skiplist_8c_1a50e428cd0dfc84ac5e72fb3ae9595a37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structskip__node" kindref="compound">skip_node</ref><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structskip__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structskip__node" kindref="compound">skip_node</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="41" refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="42" refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="43" refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref>;</highlight></codeline>
<codeline lineno="44" refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[];</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LINK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structskiplist" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structskiplist" kindref="compound">skiplist</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="51" refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref>;</highlight></codeline>
<codeline lineno="52" refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>;</highlight></codeline>
<codeline lineno="53" refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>;</highlight></codeline>
<codeline lineno="54" refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structskiplist__itor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="59" refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdict__vtable" kindref="compound">dict_vtable</ref><sp/>skiplist_vtable<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad70c6127784fe473398838a4ca7ee0e8" kindref="member">dict_inew_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" kindref="member">skiplist_dict_itor_new</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a861d296c134c416c965b8e2117cda33a" kindref="member">dict_dfree_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a824d0126c8f9bfdb2a80a357f1846909" kindref="member">skiplist_free</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a526ec5a7be277ebf2fb509362b6b2f0c" kindref="member">dict_insert_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1ad4842554437de6ab010bb84006b8bf39" kindref="member">skiplist_insert</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a482f4582ee618e6daefc99e64fcebc59" kindref="member">skiplist_search</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a373602310b3d20ab40e7634d719081f0" kindref="member">skiplist_search_le</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1ab71061e35d511edaf582707c024d5629" kindref="member">skiplist_search_lt</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a98fbe7bcb19546c9e3695eaa592b6b02" kindref="member">skiplist_search_ge</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a8b8f7145975eff26a2d358a7ab60652f" kindref="member">skiplist_search_gt</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a03ac901668905b999c543bd504ce6049" kindref="member">dict_remove_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" kindref="member">skiplist_remove</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1af10d9833546e8a985bf8a21e7cca9c39" kindref="member">dict_clear_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" kindref="member">skiplist_clear</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a465ab0c48a0c2920bd4a4d2119dde513" kindref="member">dict_traverse_func</ref>)<sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a15170e44c991e2f0710781da66693072" kindref="member">skiplist_traverse</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a18186f71a497454b44c31cd4737594fc" kindref="member">dict_select_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a6c85f33ba34353d8433b41377053f882" kindref="member">dict_count_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1aeab0378a37def72ea8c518e1f44a1b33" kindref="member">skiplist_count</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aeb7fec8d69b3fc9802e46e7d3eae4d41" kindref="member">dict_verify_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a4df47d9ff2ce6126c15bc80d9423bdf1" kindref="member">skiplist_verify</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structitor__vtable" kindref="compound">itor_vtable</ref><sp/>skiplist_itor_vtable<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1af7abde3da86249ff4c3d19f5e62e7617" kindref="member">dict_ifree_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1ad31dfafa1f916757efc48eb41f4040f1" kindref="member">skiplist_itor_free</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a66d8fb8461e0c7c72407c33f9eb1fc92" kindref="member">dict_valid_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a8c9a8ef464827a0ae56e66063b632b02" kindref="member">skiplist_itor_valid</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a1fdd9cad34cc517ad72e999498333195" kindref="member">dict_invalidate_func</ref>)<sp/><sp/><ref refid="skiplist_8c_1a83a1a0a8199354a84a74bc69785d48d2" kindref="member">skiplist_itor_invalidate</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a70987d3f887eb81f7ff4fb344bf09859" kindref="member">dict_next_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" kindref="member">skiplist_itor_next</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad0f023b37e2af0590e30cba3ebb779bf" kindref="member">dict_prev_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" kindref="member">skiplist_itor_prev</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a65f11df3f83a7ffe796598fc3efead7d" kindref="member">dict_nextn_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1ad6fcce69c6f6ce1e613554bbb2137953" kindref="member">skiplist_itor_nextn</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aaf7eb283d05ac82c2a7f32d39286c888" kindref="member">dict_prevn_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a80b0fe3e44974d0317096d4c9bc85d75" kindref="member">skiplist_itor_prevn</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a6e5c0bb6cb2131da31fdb2c1b363a734" kindref="member">dict_first_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a6647c65a42000e933fc047a2ff1077af" kindref="member">skiplist_itor_first</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1adc800add5456e9c0d9fd2f4f8f8b868f" kindref="member">dict_last_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1af97c68bce2728f1b15bbcf2d9ce32a68" kindref="member">skiplist_itor_last</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a7969590b6825845cd1e644d05b4fa300" kindref="member">dict_key_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a88b927a970f40fe40eb161fc14c88fa2" kindref="member">skiplist_itor_key</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aa24f05bcc6368e21bc8774eec9fb3a17" kindref="member">dict_datum_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" kindref="member">skiplist_itor_datum</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a4adae95e07dd7e8478ce673218a54ed2" kindref="member">skiplist_itor_search</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a0067bbc33ec62d152bb64cd6993ff049" kindref="member">skiplist_itor_search_le</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a8c0239dbe5d95238b677ddc22e80f27d" kindref="member">skiplist_itor_search_lt</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" kindref="member">skiplist_itor_search_ge</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a2e73ff31a8023637eaa66e43cccb0075" kindref="member">skiplist_itor_search_gt</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad01841eadd81f6b6eb68a1809aa7c7a1" kindref="member">dict_iremove_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1a33ddbfa076ade530bcdd0079ec4aa506" kindref="member">skiplist_itor_remove</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a64ed8ac945518e5d17e23a5d640fc5ef" kindref="member">dict_icompare_func</ref>)<sp/><sp/><sp/><sp/><ref refid="skiplist_8c_1aaa479df9fd2242cb344db95e1a747708" kindref="member">skiplist_itor_compare</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/>node_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>link_count);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>node_insert(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x,<sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>**<sp/>update);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/>node_search(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/>node_search_le(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/>node_search_lt(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/>node_search_ge(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/><sp/><sp/>node_search_gt(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>rand_link_count(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="structskiplist" kindref="compound">skiplist</ref>*</highlight></codeline>
<codeline lineno="111" refid="skiplist_8c_1a163c5a84a8d9796d5a382824734d041c" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a163c5a84a8d9796d5a382824734d041c" kindref="member">skiplist_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/>cmp_func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>max_link)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(cmp_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(max_link<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_link<sp/>&gt;<sp/><ref refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" kindref="member">MAX_LINK</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>max_link<sp/>=<sp/><ref refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" kindref="member">MAX_LINK</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*list));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref><sp/>=<sp/>node_new(NULL,<sp/>max_link)))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(list);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref><sp/>=<sp/>max_link;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref><sp/>=<sp/>cmp_func;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="structdict" kindref="compound">dict</ref>*</highlight></codeline>
<codeline lineno="135" refid="skiplist_8c_1a97d5ef497ad5c8b0b14c59097c0efa6b" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a97d5ef497ad5c8b0b14c59097c0efa6b" kindref="member">skiplist_dict_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/>cmp_func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>max_link)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict" kindref="compound">dict</ref>*<sp/>dct<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dct));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dct)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(dct-&gt;<ref refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" kindref="member">_object</ref><sp/>=<sp/><ref refid="skiplist_8c_1a163c5a84a8d9796d5a382824734d041c" kindref="member">skiplist_new</ref>(cmp_func,<sp/>max_link)))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(dct);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>dct-&gt;<ref refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" kindref="member">_vtable</ref><sp/>=<sp/>&amp;skiplist_vtable;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dct;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="skiplist_8c_1a824d0126c8f9bfdb2a80a357f1846909" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a824d0126c8f9bfdb2a80a357f1846909" kindref="member">skiplist_free</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/><ref refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" kindref="member">skiplist_clear</ref>(list,<sp/>delete_func);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(list);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">node_insert(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x,<sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>**<sp/>update)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nlinks<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(nlinks<sp/>&lt;<sp/>list-&gt;max_link);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>&lt;<sp/>nlinks)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k<sp/>&lt;=<sp/>nlinks;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(!update[k]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update[k]<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>=<sp/>nlinks;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>x-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref><sp/>=<sp/>(update[0]<sp/>==<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>)<sp/>?<sp/>NULL<sp/>:<sp/>update[0];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update[0]-&gt;link[0])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>update[0]-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0]-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>nlinks;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(update[k]-&gt;link_count<sp/>&gt;<sp/>k);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k]<sp/>=<sp/>update[k]-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>update[k]-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>++list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></highlight></codeline>
<codeline lineno="183" refid="skiplist_8c_1ad4842554437de6ab010bb84006b8bf39" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1ad4842554437de6ab010bb84006b8bf39" kindref="member">skiplist_insert</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>update[<ref refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" kindref="member">MAX_LINK</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(x-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref><sp/>&gt;<sp/>k);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update[k--]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>&amp;y-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>update[k]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>node_new(key,<sp/>rand_link_count(list));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>node_insert(list,<sp/>x,<sp/>update);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>&amp;x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*</highlight></codeline>
<codeline lineno="213"><highlight class="normal">node_search(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*</highlight></codeline>
<codeline lineno="235"><highlight class="normal">node_search_le(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>==<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref><sp/>?<sp/>NULL<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*</highlight></codeline>
<codeline lineno="257"><highlight class="normal">node_search_lt(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>==<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref><sp/>?<sp/>NULL<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*</highlight></codeline>
<codeline lineno="279"><highlight class="normal">node_search_ge(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>ret<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*</highlight></codeline>
<codeline lineno="303"><highlight class="normal">node_search_gt(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>ret<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="327" refid="skiplist_8c_1a482f4582ee618e6daefc99e64fcebc59" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a482f4582ee618e6daefc99e64fcebc59" kindref="member">skiplist_search</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>node_search(list,<sp/>key);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>?<sp/>&amp;x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="334" refid="skiplist_8c_1a373602310b3d20ab40e7634d719081f0" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a373602310b3d20ab40e7634d719081f0" kindref="member">skiplist_search_le</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>node_search_le(list,<sp/>key);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>?<sp/>&amp;x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="341" refid="skiplist_8c_1ab71061e35d511edaf582707c024d5629" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1ab71061e35d511edaf582707c024d5629" kindref="member">skiplist_search_lt</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>node_search_lt(list,<sp/>key);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>?<sp/>&amp;x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="348" refid="skiplist_8c_1a98fbe7bcb19546c9e3695eaa592b6b02" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a98fbe7bcb19546c9e3695eaa592b6b02" kindref="member">skiplist_search_ge</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>node_search_ge(list,<sp/>key);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>?<sp/>&amp;x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="355" refid="skiplist_8c_1a8b8f7145975eff26a2d358a7ab60652f" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a8b8f7145975eff26a2d358a7ab60652f" kindref="member">skiplist_search_gt</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>node_search_gt(list,<sp/>key);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>?<sp/>&amp;x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></highlight></codeline>
<codeline lineno="362" refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" kindref="member">skiplist_remove</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>update[<ref refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" kindref="member">MAX_LINK</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>+1;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(x-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref><sp/>&gt;<sp/>k);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>y-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k<sp/>-<sp/>1]<sp/>==<sp/>y)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update[k--]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>update[k]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref>)<sp/>{<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(update[k]<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(update[k]-&gt;link_count<sp/>&gt;<sp/>k);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update[k]-&gt;link[k]<sp/>!=<sp/>x)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>update[k]-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k]<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>x-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0]<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0])</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0]-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref><sp/>=<sp/>x-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref><sp/>result<sp/>=<sp/>{<sp/>x-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>,<sp/>x-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(x);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>-1])</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>--;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" kindref="member">skiplist_clear</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>node<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>next<sp/>=<sp/>node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delete_func)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete_func(node-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(node);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[--list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="skiplist_8c_1a15170e44c991e2f0710781da66693072" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a15170e44c991e2f0710781da66693072" kindref="member">skiplist_traverse</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref><sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>node<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;link[0])<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visit(node-&gt;key,<sp/>node-&gt;datum,<sp/>user_data))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="skiplist_8c_1aeab0378a37def72ea8c518e1f44a1b33" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1aeab0378a37def72ea8c518e1f44a1b33" kindref="member">skiplist_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="skiplist_8c_1a4df47d9ff2ce6126c15bc80d9423bdf1" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a4df47d9ff2ce6126c15bc80d9423bdf1" kindref="member">skiplist_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>&lt;<sp/>list-&gt;<ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[i]<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>;<sp/>i<sp/>&lt;<sp/>list-&gt;<ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[i]<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>observed_top_link<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>node<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(observed_top_link<sp/>&lt;<sp/>node-&gt;link_count)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>observed_top_link<sp/>=<sp/>node-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(node-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref><sp/>==<sp/>prev);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(node-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref><sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(node-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref><sp/>&lt;=<sp/>list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>node-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k])<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k]-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref><sp/>&gt;=<sp/>k);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(list-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref><sp/>==<sp/>observed_top_link);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="skiplist_8c_1af9d82cffc987f421df8743706ac80538" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1af9d82cffc987f421df8743706ac80538" kindref="member">skiplist_link_count_histogram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counts[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ncounts)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ncounts;<sp/>++i)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>counts[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_num_links<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>node<sp/>=<sp/>list-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;link[0])<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_num_links<sp/>&lt;<sp/>node-&gt;link_count)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_links<sp/>=<sp/>node-&gt;link_count;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncounts<sp/>&gt;<sp/>node-&gt;link_count)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[node-&gt;link_count]++;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_num_links;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*</highlight></codeline>
<codeline lineno="503" refid="skiplist_8c_1adbe33aa562dee4fa3e409b3544203780" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1adbe33aa562dee4fa3e409b3544203780" kindref="member">skiplist_itor_new</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref><sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*</highlight></codeline>
<codeline lineno="514" refid="skiplist_8c_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" kindref="member">skiplist_dict_itor_new</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*<sp/>itor<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(itor-&gt;<ref refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" kindref="member">_itor</ref><sp/>=<sp/><ref refid="skiplist_8c_1adbe33aa562dee4fa3e409b3544203780" kindref="member">skiplist_itor_new</ref>(list)))<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(itor);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" kindref="member">_vtable</ref><sp/>=<sp/>&amp;skiplist_itor_vtable;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="skiplist_8c_1ad31dfafa1f916757efc48eb41f4040f1" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1ad31dfafa1f916757efc48eb41f4040f1" kindref="member">skiplist_itor_free</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(itor);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="skiplist_8c_1a8c9a8ef464827a0ae56e66063b632b02" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a8c9a8ef464827a0ae56e66063b632b02" kindref="member">skiplist_itor_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="skiplist_8c_1a83a1a0a8199354a84a74bc69785d48d2" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a83a1a0a8199354a84a74bc69785d48d2" kindref="member">skiplist_itor_invalidate</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" kindref="member">skiplist_itor_next</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" kindref="member">skiplist_itor_prev</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="skiplist_8c_1ad6fcce69c6f6ce1e613554bbb2137953" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1ad6fcce69c6f6ce1e613554bbb2137953" kindref="member">skiplist_itor_nextn</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" kindref="member">skiplist_itor_next</ref>(itor))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="skiplist_8c_1a80b0fe3e44974d0317096d4c9bc85d75" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a80b0fe3e44974d0317096d4c9bc85d75" kindref="member">skiplist_itor_prevn</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" kindref="member">skiplist_itor_prev</ref>(itor))</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="skiplist_8c_1a6647c65a42000e933fc047a2ff1077af" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a6647c65a42000e933fc047a2ff1077af" kindref="member">skiplist_itor_first</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0])<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="skiplist_8c_1af97c68bce2728f1b15bbcf2d9ce32a68" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1af97c68bce2728f1b15bbcf2d9ce32a68" kindref="member">skiplist_itor_last</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>x<sp/>=<sp/>itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>-&gt;<ref refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" kindref="member">top_link</ref>;<sp/>k--&gt;0;)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k])</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[k];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>-&gt;<ref refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" kindref="member">head</ref>)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="skiplist_8c_1a4adae95e07dd7e8478ce673218a54ed2" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a4adae95e07dd7e8478ce673218a54ed2" kindref="member">skiplist_itor_search</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>node_search(itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>,<sp/>key))<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="skiplist_8c_1a0067bbc33ec62d152bb64cd6993ff049" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a0067bbc33ec62d152bb64cd6993ff049" kindref="member">skiplist_itor_search_le</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>node_search_le(itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>,<sp/>key))<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="skiplist_8c_1a8c0239dbe5d95238b677ddc22e80f27d" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a8c0239dbe5d95238b677ddc22e80f27d" kindref="member">skiplist_itor_search_lt</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>node_search_lt(itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>,<sp/>key))<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="skiplist_8c_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" kindref="member">skiplist_itor_search_ge</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>node_search_ge(itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>,<sp/>key))<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="skiplist_8c_1a2e73ff31a8023637eaa66e43cccb0075" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a2e73ff31a8023637eaa66e43cccb0075" kindref="member">skiplist_itor_search_gt</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>node_search_gt(itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>,<sp/>key))<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="633" refid="skiplist_8c_1a88b927a970f40fe40eb161fc14c88fa2" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a88b927a970f40fe40eb161fc14c88fa2" kindref="member">skiplist_itor_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>?<sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="639" refid="skiplist_8c_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" kindref="member">skiplist_itor_datum</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>?<sp/>&amp;itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="skiplist_8c_1aaa479df9fd2242cb344db95e1a747708" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1aaa479df9fd2242cb344db95e1a747708" kindref="member">skiplist_itor_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor2)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(itor1-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref><sp/>==<sp/>itor2-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor1-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!itor2-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor2-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor1-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>-&gt;<ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(itor1-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>,<sp/>itor2-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="skiplist_8c_1a33ddbfa076ade530bcdd0079ec4aa506" refkind="member"><highlight class="normal"><ref refid="skiplist_8c_1a33ddbfa076ade530bcdd0079ec4aa506" kindref="member">skiplist_itor_remove</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX<sp/>make<sp/>this<sp/>smarter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref><sp/>result<sp/>=<sp/><ref refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" kindref="member">skiplist_remove</ref>(itor-&gt;<ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>,<sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref>-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(result.<ref refid="structdict__remove__result_1a3b6ac8b02ffc67e7ac109edf6dca3ceb" kindref="member">removed</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*</highlight></codeline>
<codeline lineno="668"><highlight class="normal">node_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>link_count)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(link_count<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structskip__node" kindref="compound">skip_node</ref>*<sp/>node<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*node)<sp/>+</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0])<sp/>*<sp/>link_count);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" kindref="member">datum</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" kindref="member">prev</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" kindref="member">link_count</ref><sp/>=<sp/>link_count;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(node-&gt;<ref refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" kindref="member">link</ref>[0])<sp/>*<sp/>link_count);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal">rand_link_count(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>(unsigned)<sp/>__builtin_ctz(dict_rand())<sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/>list-&gt;<ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref>)<sp/>?<sp/>list-&gt;<ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref><sp/>-<sp/>1<sp/>:<sp/>count;</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/skiplist.c"/>
  </compounddef>
</doxygen>
