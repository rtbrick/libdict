<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="hashtable_8c" kind="file" language="C++">
    <compoundname>hashtable.c</compoundname>
    <includes refid="hashtable_8h" local="yes">hashtable.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="dict__private_8h" local="yes">dict_private.h</includes>
    <includes refid="hashtable__common_8h" local="yes">hashtable_common.h</includes>
    <incdepgraph>
      <node id="3">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dict_private.h</label>
        <link refid="dict__private_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/hashtable.c</label>
        <link refid="hashtable_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>hashtable_common.h</label>
        <link refid="hashtable__common_8h"/>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
      <node id="18">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structhash__node" prot="public">hash_node</innerclass>
    <innerclass refid="structhashtable" prot="public">hashtable</innerclass>
    <innerclass refid="structhashtable__itor" prot="public">hashtable_itor</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hashtable_8c_1a24e21f497bc214e2c211c4bed541bdf8" prot="public" static="no">
        <name>LOADFACTOR_NUMERATOR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="39" column="9" bodyfile="src/hashtable.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hashtable_8c_1a58651144f26400509df7a63f76c972c9" prot="public" static="no">
        <name>LOADFACTOR_DENOMINATOR</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="40" column="9" bodyfile="src/hashtable.c" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hashtable_8c_1a4a37dff778daa13ddb34cd8e4ef1a129" prot="public" static="no">
        <type>struct <ref refid="structhash__node" kindref="compound">hash_node</ref></type>
        <definition>typedef struct hash_node hash_node</definition>
        <argsstring></argsstring>
        <name>hash_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="45" column="24" bodyfile="src/hashtable.c" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hashtable_8c_1a2051a341f7fb6b2beaffa057dc6ccfbc" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structdict__vtable" kindref="compound">dict_vtable</ref></type>
        <definition>const dict_vtable hashtable_vtable</definition>
        <argsstring></argsstring>
        <name>hashtable_vtable</name>
        <initializer>= {
    false,
    (<ref refid="dict_8h_1ad70c6127784fe473398838a4ca7ee0e8" kindref="member">dict_inew_func</ref>)        <ref refid="hashtable_8c_1a395e03d6fb1a673dacfa87784d9c1bba" kindref="member">hashtable_dict_itor_new</ref>,
    (<ref refid="dict_8h_1a861d296c134c416c965b8e2117cda33a" kindref="member">dict_dfree_func</ref>)       <ref refid="hashtable_8c_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" kindref="member">hashtable_free</ref>,
    (<ref refid="dict_8h_1a526ec5a7be277ebf2fb509362b6b2f0c" kindref="member">dict_insert_func</ref>)      <ref refid="hashtable_8c_1a67bcbfe82dc7d75e26d28e82593de9ca" kindref="member">hashtable_insert</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)      <ref refid="hashtable_8c_1acf6fe1dbd03b91f46fa0c2cc9b36f455" kindref="member">hashtable_search</ref>,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)      NULL,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)      NULL,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)      NULL,
    (<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)      NULL,
    (<ref refid="dict_8h_1a03ac901668905b999c543bd504ce6049" kindref="member">dict_remove_func</ref>)      <ref refid="hashtable_8c_1a2f60f28533279fae7e1b46de945986c5" kindref="member">hashtable_remove</ref>,
    (<ref refid="dict_8h_1af10d9833546e8a985bf8a21e7cca9c39" kindref="member">dict_clear_func</ref>)       <ref refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" kindref="member">hashtable_clear</ref>,
    (<ref refid="dict_8h_1a465ab0c48a0c2920bd4a4d2119dde513" kindref="member">dict_traverse_func</ref>)    <ref refid="hashtable_8c_1ab48ef7547bc43acd328f97dd8695250a" kindref="member">hashtable_traverse</ref>,
    (<ref refid="dict_8h_1a18186f71a497454b44c31cd4737594fc" kindref="member">dict_select_func</ref>)      NULL,
    (<ref refid="dict_8h_1a6c85f33ba34353d8433b41377053f882" kindref="member">dict_count_func</ref>)       <ref refid="hashtable_8c_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" kindref="member">hashtable_count</ref>,
    (<ref refid="dict_8h_1aeb7fec8d69b3fc9802e46e7d3eae4d41" kindref="member">dict_verify_func</ref>)      <ref refid="hashtable_8c_1a4470d170573e6d2d398cfa38e4a828cd" kindref="member">hashtable_verify</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="71" column="26" bodyfile="src/hashtable.c" bodystart="71" bodyend="87"/>
      </memberdef>
      <memberdef kind="variable" id="hashtable_8c_1a5b83e2962aa102d43c6eca25bbca701f" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structitor__vtable" kindref="compound">itor_vtable</ref></type>
        <definition>const itor_vtable hashtable_itor_vtable</definition>
        <argsstring></argsstring>
        <name>hashtable_itor_vtable</name>
        <initializer>= {
    (<ref refid="dict_8h_1af7abde3da86249ff4c3d19f5e62e7617" kindref="member">dict_ifree_func</ref>)       <ref refid="hashtable_8c_1a8ac2a4cbf94617859785461561ac6641" kindref="member">hashtable_itor_free</ref>,
    (<ref refid="dict_8h_1a66d8fb8461e0c7c72407c33f9eb1fc92" kindref="member">dict_valid_func</ref>)       <ref refid="hashtable_8c_1abefb05d066d3a1c9183bf8104667bce9" kindref="member">hashtable_itor_valid</ref>,
    (<ref refid="dict_8h_1a1fdd9cad34cc517ad72e999498333195" kindref="member">dict_invalidate_func</ref>)  <ref refid="hashtable_8c_1ab22306e18adca4372e681f440d9f15bd" kindref="member">hashtable_itor_invalidate</ref>,
    (<ref refid="dict_8h_1a70987d3f887eb81f7ff4fb344bf09859" kindref="member">dict_next_func</ref>)        <ref refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" kindref="member">hashtable_itor_next</ref>,
    (<ref refid="dict_8h_1ad0f023b37e2af0590e30cba3ebb779bf" kindref="member">dict_prev_func</ref>)        <ref refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" kindref="member">hashtable_itor_prev</ref>,
    (<ref refid="dict_8h_1a65f11df3f83a7ffe796598fc3efead7d" kindref="member">dict_nextn_func</ref>)       <ref refid="hashtable_8c_1aac4843e885adc5e4d700748ebf2c5230" kindref="member">hashtable_itor_nextn</ref>,
    (<ref refid="dict_8h_1aaf7eb283d05ac82c2a7f32d39286c888" kindref="member">dict_prevn_func</ref>)       <ref refid="hashtable_8c_1a4d9108429e134d8b6c06bf108677f77b" kindref="member">hashtable_itor_prevn</ref>,
    (<ref refid="dict_8h_1a6e5c0bb6cb2131da31fdb2c1b363a734" kindref="member">dict_first_func</ref>)       <ref refid="hashtable_8c_1a4af5cb02f974fcafb9cbd486e273eca1" kindref="member">hashtable_itor_first</ref>,
    (<ref refid="dict_8h_1adc800add5456e9c0d9fd2f4f8f8b868f" kindref="member">dict_last_func</ref>)        <ref refid="hashtable_8c_1a45f1d8e870f55a93a8aa7c6f11124080" kindref="member">hashtable_itor_last</ref>,
    (<ref refid="dict_8h_1a7969590b6825845cd1e644d05b4fa300" kindref="member">dict_key_func</ref>)         <ref refid="hashtable_8c_1ae5ecbe4b9400383290c704d35c7c9054" kindref="member">hashtable_itor_key</ref>,
    (<ref refid="dict_8h_1aa24f05bcc6368e21bc8774eec9fb3a17" kindref="member">dict_datum_func</ref>)       <ref refid="hashtable_8c_1a70ff976a76185ee4e9024bfa7b1b02bd" kindref="member">hashtable_itor_datum</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)     <ref refid="hashtable_8c_1a2618afdd980763175fab2a23333fb4a9" kindref="member">hashtable_itor_search</ref>,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)     NULL,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)     NULL,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)     NULL,
    (<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)     NULL,
    (<ref refid="dict_8h_1ad01841eadd81f6b6eb68a1809aa7c7a1" kindref="member">dict_iremove_func</ref>)     <ref refid="hashtable_8c_1a7ba59e801312dab3714273fd4d060fe8" kindref="member">hashtable_itor_remove</ref>,
    (<ref refid="dict_8h_1a64ed8ac945518e5d17e23a5d640fc5ef" kindref="member">dict_icompare_func</ref>)    NULL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="89" column="26" bodyfile="src/hashtable.c" bodystart="89" bodyend="108"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hashtable_8c_1af455c560cff947a8088f557ab119795a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
        <definition>hashtable * hashtable_new</definition>
        <argsstring>(dict_compare_func cmp_func, dict_hash_func hash_func, unsigned size)</argsstring>
        <name>hashtable_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="111" column="1" bodyfile="src/hashtable.c" bodystart="111" bodyend="131"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
        <references refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" compoundref="hashtable__common_8c" startline="41" endline="48">dict_prime_geq</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1abbe4b0247e04c69486fe907df6b34849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict" kindref="compound">dict</ref> *</type>
        <definition>dict * hashtable_dict_new</definition>
        <argsstring>(dict_compare_func cmp_func, dict_hash_func hash_func, unsigned size)</argsstring>
        <name>hashtable_dict_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="134" column="1" bodyfile="src/hashtable.c" bodystart="134" bodyend="149"/>
        <references refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" compoundref="dict_8h" startline="152">dict::_object</references>
        <references refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" compoundref="dict_8h" startline="153">dict::_vtable</references>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable_8c_1af455c560cff947a8088f557ab119795a" compoundref="hashtable_8c" startline="111" endline="131">hashtable_new</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_free</definition>
        <argsstring>(hashtable *table, dict_delete_func delete_func)</argsstring>
        <name>hashtable_free</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="152" column="1" bodyfile="src/hashtable.c" bodystart="152" bodyend="160"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" compoundref="hashtable_8c" startline="251" endline="268">hashtable_clear</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a67bcbfe82dc7d75e26d28e82593de9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></type>
        <definition>dict_insert_result hashtable_insert</definition>
        <argsstring>(hashtable *table, void *key)</argsstring>
        <name>hashtable_insert</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="163" column="1" bodyfile="src/hashtable.c" bodystart="163" bodyend="201"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="hashtable_8c_1a99a194118712fc1cfc4e3d954c9887a7" compoundref="hashtable_8c" startline="307" endline="348">hashtable_resize</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="hashtable_8c_1a58651144f26400509df7a63f76c972c9" compoundref="hashtable_8c" startline="40">LOADFACTOR_DENOMINATOR</references>
        <references refid="hashtable_8c_1a24e21f497bc214e2c211c4bed541bdf8" compoundref="hashtable_8c" startline="39">LOADFACTOR_NUMERATOR</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" compoundref="hashtable_8c" startline="53">hash_node::prev</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1acf6fe1dbd03b91f46fa0c2cc9b36f455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** hashtable_search</definition>
        <argsstring>(hashtable *table, const void *key)</argsstring>
        <name>hashtable_search</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="204" column="1" bodyfile="src/hashtable.c" bodystart="204" bodyend="215"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a22c16d22824fd7cc1486ef452621ef57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_node</definition>
        <argsstring>(hashtable *table, hash_node *node, unsigned mhash)</argsstring>
        <name>remove_node</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="structhash__node" kindref="compound">hash_node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>mhash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="218" column="1" bodyfile="src/hashtable.c" bodystart="218" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a2f60f28533279fae7e1b46de945986c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></type>
        <definition>dict_remove_result hashtable_remove</definition>
        <argsstring>(hashtable *table, const void *key)</argsstring>
        <name>hashtable_remove</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="233" column="1" bodyfile="src/hashtable.c" bodystart="233" bodyend="248"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_clear</definition>
        <argsstring>(hashtable *table, dict_delete_func delete_func)</argsstring>
        <name>hashtable_clear</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="251" column="1" bodyfile="src/hashtable.c" bodystart="251" bodyend="268"/>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1ab48ef7547bc43acd328f97dd8695250a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_traverse</definition>
        <argsstring>(hashtable *table, dict_visit_func visit, void *user_data)</argsstring>
        <name>hashtable_traverse</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref></type>
          <declname>visit</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="271" column="1" bodyfile="src/hashtable.c" bodystart="271" bodyend="282"/>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_count</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_count</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="285" column="1" bodyfile="src/hashtable.c" bodystart="285" bodyend="288"/>
        <references refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="hashtable_8c" startline="61">hashtable::count</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1ad37da2d98910ad7ad07a9bd325128e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_size</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_size</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="291" column="1" bodyfile="src/hashtable.c" bodystart="291" bodyend="294"/>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1ae4e6def277e47c1ed3088462dbf6b652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashtable_slots_used</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_slots_used</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="297" column="1" bodyfile="src/hashtable.c" bodystart="297" bodyend="304"/>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a99a194118712fc1cfc4e3d954c9887a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_resize</definition>
        <argsstring>(hashtable *table, unsigned new_size)</argsstring>
        <name>hashtable_resize</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="307" column="1" bodyfile="src/hashtable.c" bodystart="307" bodyend="348"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" compoundref="hashtable__common_8c" startline="41" endline="48">dict_prime_geq</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" compoundref="hashtable_8c" startline="53">hash_node::prev</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a4470d170573e6d2d398cfa38e4a828cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_verify</definition>
        <argsstring>(const hashtable *table)</argsstring>
        <name>hashtable_verify</name>
        <param>
          <type>const <ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="351" column="1" bodyfile="src/hashtable.c" bodystart="351" bodyend="369"/>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" compoundref="dict__private_8h" startline="78" endline="85">VERIFY</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a42ef1560386cd5b2ed4bbda89066305a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
        <definition>hashtable_itor * hashtable_itor_new</definition>
        <argsstring>(hashtable *table)</argsstring>
        <name>hashtable_itor_new</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="372" column="1" bodyfile="src/hashtable.c" bodystart="372" bodyend="381"/>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a395e03d6fb1a673dacfa87784d9c1bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__itor" kindref="compound">dict_itor</ref> *</type>
        <definition>dict_itor * hashtable_dict_itor_new</definition>
        <argsstring>(hashtable *table)</argsstring>
        <name>hashtable_dict_itor_new</name>
        <param>
          <type><ref refid="structhashtable" kindref="compound">hashtable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="384" column="1" bodyfile="src/hashtable.c" bodystart="384" bodyend="395"/>
        <references refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" compoundref="dict_8h" startline="175">dict_itor::_itor</references>
        <references refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" compoundref="dict_8h" startline="176">dict_itor::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="hashtable_8c_1a42ef1560386cd5b2ed4bbda89066305a" compoundref="hashtable_8c" startline="372" endline="381">hashtable_itor_new</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a8ac2a4cbf94617859785461561ac6641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashtable_itor_free</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_free</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="398" column="1" bodyfile="src/hashtable.c" bodystart="398" bodyend="401"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1abefb05d066d3a1c9183bf8104667bce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_valid</definition>
        <argsstring>(const hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_valid</name>
        <param>
          <type>const <ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="404" column="1" bodyfile="src/hashtable.c" bodystart="404" bodyend="407"/>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1ab22306e18adca4372e681f440d9f15bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashtable_itor_invalidate</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_invalidate</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="410" column="1" bodyfile="src/hashtable.c" bodystart="410" bodyend="414"/>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_next</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_next</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="417" column="1" bodyfile="src/hashtable.c" bodystart="417" bodyend="436"/>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1ab147d632aca389887973e15b382e070d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_prev</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_prev</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="439" column="1" bodyfile="src/hashtable.c" bodystart="439" bodyend="461"/>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" compoundref="hashtable_8c" startline="53">hash_node::prev</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1aac4843e885adc5e4d700748ebf2c5230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_nextn</definition>
        <argsstring>(hashtable_itor *itor, size_t count)</argsstring>
        <name>hashtable_itor_nextn</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="464" column="1" bodyfile="src/hashtable.c" bodystart="464" bodyend="471"/>
        <references refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" compoundref="hashtable_8c" startline="417" endline="436">hashtable_itor_next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a4d9108429e134d8b6c06bf108677f77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_prevn</definition>
        <argsstring>(hashtable_itor *itor, size_t count)</argsstring>
        <name>hashtable_itor_prevn</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="474" column="1" bodyfile="src/hashtable.c" bodystart="474" bodyend="481"/>
        <references refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" compoundref="hashtable_8c" startline="439" endline="461">hashtable_itor_prev</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a4af5cb02f974fcafb9cbd486e273eca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_first</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_first</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="484" column="1" bodyfile="src/hashtable.c" bodystart="484" bodyend="496"/>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a45f1d8e870f55a93a8aa7c6f11124080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_last</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_last</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="499" column="1" bodyfile="src/hashtable.c" bodystart="499" bodyend="514"/>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a2618afdd980763175fab2a23333fb4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_search</definition>
        <argsstring>(hashtable_itor *itor, const void *key)</argsstring>
        <name>hashtable_itor_search</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="517" column="1" bodyfile="src/hashtable.c" bodystart="517" bodyend="533"/>
        <references refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="hashtable_8c" startline="59">hashtable::cmp_func</references>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" compoundref="hashtable_8c" startline="60">hashtable::hash_func</references>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" compoundref="hashtable_8c" startline="50">hash_node::next</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" compoundref="hashtable_8c" startline="68">hashtable_itor::slot</references>
        <references refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" compoundref="hashtable_8c" startline="58">hashtable::table</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1ae5ecbe4b9400383290c704d35c7c9054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * hashtable_itor_key</definition>
        <argsstring>(const hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_key</name>
        <param>
          <type>const <ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="536" column="1" bodyfile="src/hashtable.c" bodystart="536" bodyend="539"/>
        <references refid="structhash__node_1a269110e1860732992f4f6f5514813c75" compoundref="hashtable_8c" startline="48">hash_node::key</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a70ff976a76185ee4e9024bfa7b1b02bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** hashtable_itor_datum</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_datum</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="542" column="1" bodyfile="src/hashtable.c" bodystart="542" bodyend="545"/>
        <references refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" compoundref="hashtable_8c" startline="49">hash_node::datum</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="hashtable_8c_1a7ba59e801312dab3714273fd4d060fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashtable_itor_remove</definition>
        <argsstring>(hashtable_itor *itor)</argsstring>
        <name>hashtable_itor_remove</name>
        <param>
          <type><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hashtable.c" line="548" column="1" bodyfile="src/hashtable.c" bodystart="548" bodyend="555"/>
        <references refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" compoundref="hashtable_8c" startline="54">hash_node::hash</references>
        <references refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" compoundref="hashtable_8c" startline="67">hashtable_itor::node</references>
        <references refid="structhashtable_1a245260f6f74972558f61b85227df5aae" compoundref="hashtable_8c" startline="62">hashtable::size</references>
        <references refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" compoundref="hashtable_8c" startline="66">hashtable_itor::table</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libdict<sp/>--<sp/>chained<sp/>hash-table,<sp/>with<sp/>chains<sp/>sorted<sp/>by<sp/>hash,<sp/>implementation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001-2014,<sp/>Farooq<sp/>Mela</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>cf.<sp/>[Gonnet<sp/>1984],<sp/>[Knuth<sp/>1998]</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hashtable_8h" kindref="compound">hashtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>memset()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict__private_8h" kindref="compound">dict_private.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hashtable__common_8h" kindref="compound">hashtable_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>make<sp/>this<sp/>configurable<sp/>in<sp/>the<sp/>constructor<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="hashtable_8c_1a24e21f497bc214e2c211c4bed541bdf8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOADFACTOR_NUMERATOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="hashtable_8c_1a58651144f26400509df7a63f76c972c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOADFACTOR_DENOMINATOR<sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LOADFACTOR_NUMERATOR<sp/>&gt;<sp/>LOADFACTOR_DENOMINATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>LOADFACTOR_NUMERATOR<sp/>must<sp/>be<sp/>less<sp/>than<sp/>LOADFACTOR_DENOMINATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="hashtable_8c_1a4a37dff778daa13ddb34cd8e4ef1a129" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structhash__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__node" kindref="compound">hash_node</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structhash__node_1a269110e1860732992f4f6f5514813c75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="49" refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="50" refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>because<sp/>iterators<sp/>are<sp/>bidirectional:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="54" refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Untruncated<sp/>hash<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structhashtable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhashtable" kindref="compound">hashtable</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="59" refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><sp/><sp/><ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>;</highlight></codeline>
<codeline lineno="60" refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>;</highlight></codeline>
<codeline lineno="61" refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="62" refid="structhashtable_1a245260f6f74972558f61b85227df5aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structhashtable__itor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref><sp/>{</highlight></codeline>
<codeline lineno="66" refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="67" refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="68" refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdict__vtable" kindref="compound">dict_vtable</ref><sp/>hashtable_vtable<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad70c6127784fe473398838a4ca7ee0e8" kindref="member">dict_inew_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a395e03d6fb1a673dacfa87784d9c1bba" kindref="member">hashtable_dict_itor_new</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a861d296c134c416c965b8e2117cda33a" kindref="member">dict_dfree_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" kindref="member">hashtable_free</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a526ec5a7be277ebf2fb509362b6b2f0c" kindref="member">dict_insert_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a67bcbfe82dc7d75e26d28e82593de9ca" kindref="member">hashtable_insert</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1acf6fe1dbd03b91f46fa0c2cc9b36f455" kindref="member">hashtable_search</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_le:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_lt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_ge:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab062091ed90f88e902342e2069a545ee" kindref="member">dict_search_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>search_gt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a03ac901668905b999c543bd504ce6049" kindref="member">dict_remove_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a2f60f28533279fae7e1b46de945986c5" kindref="member">hashtable_remove</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1af10d9833546e8a985bf8a21e7cca9c39" kindref="member">dict_clear_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" kindref="member">hashtable_clear</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a465ab0c48a0c2920bd4a4d2119dde513" kindref="member">dict_traverse_func</ref>)<sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1ab48ef7547bc43acd328f97dd8695250a" kindref="member">hashtable_traverse</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a18186f71a497454b44c31cd4737594fc" kindref="member">dict_select_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a6c85f33ba34353d8433b41377053f882" kindref="member">dict_count_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" kindref="member">hashtable_count</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aeb7fec8d69b3fc9802e46e7d3eae4d41" kindref="member">dict_verify_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a4470d170573e6d2d398cfa38e4a828cd" kindref="member">hashtable_verify</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structitor__vtable" kindref="compound">itor_vtable</ref><sp/>hashtable_itor_vtable<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1af7abde3da86249ff4c3d19f5e62e7617" kindref="member">dict_ifree_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a8ac2a4cbf94617859785461561ac6641" kindref="member">hashtable_itor_free</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a66d8fb8461e0c7c72407c33f9eb1fc92" kindref="member">dict_valid_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1abefb05d066d3a1c9183bf8104667bce9" kindref="member">hashtable_itor_valid</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a1fdd9cad34cc517ad72e999498333195" kindref="member">dict_invalidate_func</ref>)<sp/><sp/><ref refid="hashtable_8c_1ab22306e18adca4372e681f440d9f15bd" kindref="member">hashtable_itor_invalidate</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a70987d3f887eb81f7ff4fb344bf09859" kindref="member">dict_next_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" kindref="member">hashtable_itor_next</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad0f023b37e2af0590e30cba3ebb779bf" kindref="member">dict_prev_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" kindref="member">hashtable_itor_prev</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a65f11df3f83a7ffe796598fc3efead7d" kindref="member">dict_nextn_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1aac4843e885adc5e4d700748ebf2c5230" kindref="member">hashtable_itor_nextn</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aaf7eb283d05ac82c2a7f32d39286c888" kindref="member">dict_prevn_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a4d9108429e134d8b6c06bf108677f77b" kindref="member">hashtable_itor_prevn</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a6e5c0bb6cb2131da31fdb2c1b363a734" kindref="member">dict_first_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a4af5cb02f974fcafb9cbd486e273eca1" kindref="member">hashtable_itor_first</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1adc800add5456e9c0d9fd2f4f8f8b868f" kindref="member">dict_last_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a45f1d8e870f55a93a8aa7c6f11124080" kindref="member">hashtable_itor_last</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a7969590b6825845cd1e644d05b4fa300" kindref="member">dict_key_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1ae5ecbe4b9400383290c704d35c7c9054" kindref="member">hashtable_itor_key</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1aa24f05bcc6368e21bc8774eec9fb3a17" kindref="member">dict_datum_func</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a70ff976a76185ee4e9024bfa7b1b02bd" kindref="member">hashtable_itor_datum</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a2618afdd980763175fab2a23333fb4a9" kindref="member">hashtable_itor_search</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_le:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_lt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_ge:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ab8de90f16c288deeb67b9c67f43bed37" kindref="member">dict_isearch_func</ref>)<sp/><sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>itor_search_gt:<sp/>not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1ad01841eadd81f6b6eb68a1809aa7c7a1" kindref="member">dict_iremove_func</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a7ba59e801312dab3714273fd4d060fe8" kindref="member">hashtable_itor_remove</ref>,</highlight><highlight class="comment">/*<sp/>hashtable_itor_remove<sp/>not<sp/>implemented<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dict_8h_1a64ed8ac945518e5d17e23a5d640fc5ef" kindref="member">dict_icompare_func</ref>)<sp/><sp/><sp/><sp/>NULL,</highlight><highlight class="comment">/*<sp/>hashtable_itor_compare<sp/>not<sp/>implemented<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="structhashtable" kindref="compound">hashtable</ref>*</highlight></codeline>
<codeline lineno="111" refid="hashtable_8c_1af455c560cff947a8088f557ab119795a" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1af455c560cff947a8088f557ab119795a" kindref="member">hashtable_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/>cmp_func,<sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/>hash_func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(cmp_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(hash_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*table));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>=<sp/><ref refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" kindref="member">dict_prime_geq</ref>(size);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref><sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>*));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>,<sp/>0,<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>*));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref><sp/>=<sp/>cmp_func;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref><sp/>=<sp/>hash_func;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="structdict" kindref="compound">dict</ref>*</highlight></codeline>
<codeline lineno="134" refid="hashtable_8c_1abbe4b0247e04c69486fe907df6b34849" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1abbe4b0247e04c69486fe907df6b34849" kindref="member">hashtable_dict_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/>cmp_func,<sp/><ref refid="dict_8h_1a849c4295058ff98298369ba530fd254d" kindref="member">dict_hash_func</ref><sp/>hash_func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(hash_func<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict" kindref="compound">dict</ref>*<sp/>dct<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dct));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dct)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct-&gt;<ref refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" kindref="member">_object</ref><sp/>=<sp/><ref refid="hashtable_8c_1af455c560cff947a8088f557ab119795a" kindref="member">hashtable_new</ref>(cmp_func,<sp/>hash_func,<sp/>size);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dct-&gt;<ref refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" kindref="member">_object</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(dct);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct-&gt;<ref refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" kindref="member">_vtable</ref><sp/>=<sp/>&amp;hashtable_vtable;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dct;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="hashtable_8c_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a24bb5d1cc6d174e890eebcfbf4ecf4ee" kindref="member">hashtable_free</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(table<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/><ref refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" kindref="member">hashtable_clear</ref>(table,<sp/>delete_func);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></highlight></codeline>
<codeline lineno="163" refid="hashtable_8c_1a67bcbfe82dc7d75e26d28e82593de9ca" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a67bcbfe82dc7d75e26d28e82593de9ca" kindref="member">hashtable_insert</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hashtable_8c_1a58651144f26400509df7a63f76c972c9" kindref="member">LOADFACTOR_DENOMINATOR</ref><sp/>*<sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>&gt;=<sp/><ref refid="hashtable_8c_1a24e21f497bc214e2c211c4bed541bdf8" kindref="member">LOADFACTOR_NUMERATOR</ref><sp/>*<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Load<sp/>factor<sp/>too<sp/>high.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashtable_8c_1a99a194118712fc1cfc4e3d954c9887a7" kindref="member">hashtable_resize</ref>(table,<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>(key);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>mhash<sp/>=<sp/>hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[mhash];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>&amp;&amp;<sp/>hash<sp/>&gt;=<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>==<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>&amp;node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>add<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*add));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!add)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>add-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>add-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>add-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>=<sp/>hash;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>add-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref><sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref><sp/>=<sp/>add;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[mhash]<sp/>=<sp/>add;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>add-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref><sp/>=<sp/>add;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref>)<sp/>{<sp/>&amp;add-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="204" refid="hashtable_8c_1acf6fe1dbd03b91f46fa0c2cc9b36f455" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1acf6fe1dbd03b91f46fa0c2cc9b36f455" kindref="member">hashtable_search</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>(key);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>&amp;&amp;<sp/>hash<sp/>&gt;=<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>==<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">remove_node(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>mhash)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref>-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref><sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[mhash]<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref><sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(node);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></highlight></codeline>
<codeline lineno="233" refid="hashtable_8c_1a2f60f28533279fae7e1b46de945986c5" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a2f60f28533279fae7e1b46de945986c5" kindref="member">hashtable_remove</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>(key);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>mhash<sp/>=<sp/>hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[mhash];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>&amp;&amp;<sp/>hash<sp/>&gt;=<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>==<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref><sp/>result<sp/>=<sp/>{<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_node(table,<sp/>node,<sp/>mhash);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref>)<sp/>{<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1aae522c5e1cb380ff321c81d21b3c6f08" kindref="member">hashtable_clear</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>0;<sp/>slot<sp/>&lt;<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>slot++)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>next<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delete_func)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete_func(node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(node);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="hashtable_8c_1ab48ef7547bc43acd328f97dd8695250a" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1ab48ef7547bc43acd328f97dd8695250a" kindref="member">hashtable_traverse</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref><sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[i];<sp/>node;<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visit(node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>,<sp/>node-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref>,<sp/>user_data))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="hashtable_8c_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a4c2c62eeb7bfff0954dbc5a2bfa1179c" kindref="member">hashtable_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structhashtable_1a76d971a3c552bc58ba9f0d5fceae9806" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="hashtable_8c_1ad37da2d98910ad7ad07a9bd325128e45" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1ad37da2d98910ad7ad07a9bd325128e45" kindref="member">hashtable_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="hashtable_8c_1ae4e6def277e47c1ed3088462dbf6b652" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1ae4e6def277e47c1ed3088462dbf6b652" kindref="member">hashtable_slots_used</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[i])</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="hashtable_8c_1a99a194118712fc1cfc4e3d954c9887a7" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a99a194118712fc1cfc4e3d954c9887a7" kindref="member">hashtable_resize</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" kindref="member">ASSERT</ref>(new_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>new_size<sp/>=<sp/><ref refid="hashtable__common_8c_1af8af08005cd8f9f8cd81dd7ca0692b11" kindref="member">dict_prime_geq</ref>(new_size);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>==<sp/>new_size)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>investigate<sp/>whether<sp/>using<sp/>realloc<sp/>would<sp/>be<sp/>advantageous.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>**<sp/>ntable<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(new_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>*));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ntable)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ntable,<sp/>0,<sp/>new_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhash__node" kindref="compound">hash_node</ref>*));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[i];<sp/>node;)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>mhash<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>%<sp/>new_size;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>search<sp/>=<sp/>ntable[mhash];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(search<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>&gt;=<sp/>search-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>search;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>=<sp/>search-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref><sp/>=<sp/>search)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref><sp/>=<sp/>prev)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntable[mhash]<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref><sp/>=<sp/>ntable;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="hashtable_8c_1a4470d170573e6d2d398cfa38e4a828cd" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a4470d170573e6d2d398cfa38e4a828cd" kindref="member">hashtable_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>0;<sp/>slot<sp/>&lt;<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>++slot)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>n<sp/>=<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot];<sp/>n;<sp/>n<sp/>=<sp/>n-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>table-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot])<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(n-&gt;prev<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(n-&gt;prev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(n-&gt;prev-&gt;next<sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(n-&gt;next-&gt;prev<sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(n-&gt;hash<sp/>&lt;=<sp/>n-&gt;next-&gt;hash);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" kindref="member">VERIFY</ref>(n-&gt;hash<sp/>%<sp/>table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref><sp/>==<sp/>slot);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*</highlight></codeline>
<codeline lineno="372" refid="hashtable_8c_1a42ef1560386cd5b2ed4bbda89066305a" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a42ef1560386cd5b2ed4bbda89066305a" kindref="member">hashtable_itor_new</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref><sp/>=<sp/>table;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*</highlight></codeline>
<codeline lineno="384" refid="hashtable_8c_1a395e03d6fb1a673dacfa87784d9c1bba" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a395e03d6fb1a673dacfa87784d9c1bba" kindref="member">hashtable_dict_itor_new</ref>(<ref refid="structhashtable" kindref="compound">hashtable</ref>*<sp/>table)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*<sp/>itor<sp/>=<sp/><ref refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" kindref="member">MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*itor));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(itor-&gt;<ref refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" kindref="member">_itor</ref><sp/>=<sp/><ref refid="hashtable_8c_1a42ef1560386cd5b2ed4bbda89066305a" kindref="member">hashtable_itor_new</ref>(table)))<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(itor);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" kindref="member">_vtable</ref><sp/>=<sp/>&amp;hashtable_itor_vtable;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="hashtable_8c_1a8ac2a4cbf94617859785461561ac6641" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a8ac2a4cbf94617859785461561ac6641" kindref="member">hashtable_itor_free</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(itor);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="hashtable_8c_1abefb05d066d3a1c9183bf8104667bce9" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1abefb05d066d3a1c9183bf8104667bce9" kindref="member">hashtable_itor_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="hashtable_8c_1ab22306e18adca4372e681f440d9f15bd" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1ab22306e18adca4372e681f440d9f15bd" kindref="member">hashtable_itor_invalidate</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" kindref="member">hashtable_itor_next</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++slot<sp/>&lt;<sp/>itor-&gt;table-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot])<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>slot;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" kindref="member">hashtable_itor_prev</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>-&gt;<ref refid="structhash__node_1a92aeb549b5bf6b8ca9fa704ee00a9e79" kindref="member">prev</ref>)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(slot<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[--slot];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>slot;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="hashtable_8c_1aac4843e885adc5e4d700748ebf2c5230" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1aac4843e885adc5e4d700748ebf2c5230" kindref="member">hashtable_itor_nextn</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hashtable_8c_1a4640047b70788f6af358e36e4a35ecdd" kindref="member">hashtable_itor_next</ref>(itor))</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="hashtable_8c_1a4d9108429e134d8b6c06bf108677f77b" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a4d9108429e134d8b6c06bf108677f77b" kindref="member">hashtable_itor_prevn</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hashtable_8c_1ab147d632aca389887973e15b382e070d" kindref="member">hashtable_itor_prev</ref>(itor))</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="hashtable_8c_1a4af5cb02f974fcafb9cbd486e273eca1" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a4af5cb02f974fcafb9cbd486e273eca1" kindref="member">hashtable_itor_first</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>0;<sp/>slot<sp/>&lt;<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>++slot)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot])<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>slot;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="hashtable_8c_1a45f1d8e870f55a93a8aa7c6f11124080" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a45f1d8e870f55a93a8aa7c6f11124080" kindref="member">hashtable_itor_last</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;<sp/>slot<sp/>&gt;<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[--slot])<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[slot];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>slot;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="hashtable_8c_1a2618afdd980763175fab2a23333fb4a9" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a2618afdd980763175fab2a23333fb4a9" kindref="member">hashtable_itor_search</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1afcbf6b4ca50c87e70ae1ae4febfdff2f" kindref="member">hash_func</ref>(key);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>mhash<sp/>=<sp/>hash<sp/>%<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhash__node" kindref="compound">hash_node</ref>*<sp/>node<sp/>=<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1ad9caeed525ca3622b9d44edd1531a23f" kindref="member">table</ref>[mhash];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>&amp;&amp;<sp/>hash<sp/>&gt;=<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref>)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash<sp/>==<sp/>node-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>&amp;&amp;<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>(key,<sp/>node-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>mhash;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structhash__node_1a7a97227f6e8d3ea257f595306e8cb20a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1a10d37451a519c4fc6326acbdf8856451" kindref="member">slot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="536" refid="hashtable_8c_1ae5ecbe4b9400383290c704d35c7c9054" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1ae5ecbe4b9400383290c704d35c7c9054" kindref="member">hashtable_itor_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>?<sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>-&gt;<ref refid="structhash__node_1a269110e1860732992f4f6f5514813c75" kindref="member">key</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="542" refid="hashtable_8c_1a70ff976a76185ee4e9024bfa7b1b02bd" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a70ff976a76185ee4e9024bfa7b1b02bd" kindref="member">hashtable_itor_datum</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>?<sp/>&amp;itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>-&gt;<ref refid="structhash__node_1ac9af8e9ce7fe8f1707012ed4fe5cf0ca" kindref="member">datum</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="hashtable_8c_1a7ba59e801312dab3714273fd4d060fe8" refkind="member"><highlight class="normal"><ref refid="hashtable_8c_1a7ba59e801312dab3714273fd4d060fe8" kindref="member">hashtable_itor_remove</ref>(<ref refid="structhashtable__itor" kindref="compound">hashtable_itor</ref>*<sp/>itor)</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>remove_node(itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>,<sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>,<sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref>-&gt;<ref refid="structhash__node_1a1528ad8c92b5bb97aac6de4360a6e16f" kindref="member">hash</ref><sp/>%<sp/>itor-&gt;<ref refid="structhashtable__itor_1a1c2725966eac16e4eb85ec20276be313" kindref="member">table</ref>-&gt;<ref refid="structhashtable_1a245260f6f74972558f61b85227df5aae" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>itor-&gt;<ref refid="structhashtable__itor_1ac132a6acabd26ddbcea7c8d00fd5b68f" kindref="member">node</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/hashtable.c"/>
  </compounddef>
</doxygen>
