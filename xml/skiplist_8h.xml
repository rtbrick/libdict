<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="skiplist_8h" kind="file" language="C++">
    <compoundname>skiplist.h</compoundname>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includedby refid="dict_8h" local="yes">include/dict.h</includedby>
    <includedby refid="skiplist_8c" local="yes">src/skiplist.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/hashtable.h</label>
        <link refid="hashtable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/hashtable2.h</label>
        <link refid="hashtable2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/hb_tree.h</label>
        <link refid="hb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/pr_tree.h</label>
        <link refid="pr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/skiplist.h</label>
        <link refid="skiplist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/sp_tree.h</label>
        <link refid="sp__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/tr_tree.h</label>
        <link refid="tr__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/wb_tree.h</label>
        <link refid="wb__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/dict.c</label>
        <link refid="dict_8c"/>
      </node>
      <node id="19">
        <label>src/dict_private.h</label>
        <link refid="dict__private_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/hashtable.c</label>
        <link refid="hashtable_8c"/>
      </node>
      <node id="6">
        <label>src/hashtable2.c</label>
        <link refid="hashtable2_8c"/>
      </node>
      <node id="8">
        <label>src/hb_tree.c</label>
        <link refid="hb__tree_8c"/>
      </node>
      <node id="10">
        <label>src/pr_tree.c</label>
        <link refid="pr__tree_8c"/>
      </node>
      <node id="12">
        <label>src/rb_tree.c</label>
        <link refid="rb__tree_8c"/>
      </node>
      <node id="21">
        <label>src/skiplist.c</label>
        <link refid="skiplist_8c"/>
      </node>
      <node id="14">
        <label>src/sp_tree.c</label>
        <link refid="sp__tree_8c"/>
      </node>
      <node id="16">
        <label>src/tr_tree.c</label>
        <link refid="tr__tree_8c"/>
      </node>
      <node id="22">
        <label>src/tree_common.c</label>
        <link refid="tree__common_8c"/>
      </node>
      <node id="23">
        <label>src/tree_common.h</label>
        <link refid="tree__common_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/wb_tree.c</label>
        <link refid="wb__tree_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="skiplist_8h_1ad54b05301a5276404d53e2bce969c45f" prot="public" static="no">
        <type>struct <ref refid="structskiplist" kindref="compound">skiplist</ref></type>
        <definition>typedef struct skiplist skiplist</definition>
        <argsstring></argsstring>
        <name>skiplist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="35" column="23" bodyfile="include/skiplist.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="skiplist_8h_1a516029f32fd57f616f44e5b9650c5847" prot="public" static="no">
        <type>struct <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref></type>
        <definition>typedef struct skiplist_itor skiplist_itor</definition>
        <argsstring></argsstring>
        <name>skiplist_itor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="64" column="28" bodyfile="include/skiplist.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="skiplist_8h_1a163c5a84a8d9796d5a382824734d041c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
        <definition>skiplist * skiplist_new</definition>
        <argsstring>(dict_compare_func cmp_func, unsigned max_link)</argsstring>
        <name>skiplist_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>max_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="37" column="16" bodyfile="src/skiplist.c" bodystart="111" bodyend="132" declfile="include/skiplist.h" declline="37" declcolumn="16"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" compoundref="skiplist_8c" startline="47">MAX_LINK</references>
        <references refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" compoundref="skiplist_8c" startline="51">skiplist::max_link</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a97d5ef497ad5c8b0b14c59097c0efa6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict" kindref="compound">dict</ref> *</type>
        <definition>dict * skiplist_dict_new</definition>
        <argsstring>(dict_compare_func cmp_func, unsigned max_link)</argsstring>
        <name>skiplist_dict_new</name>
        <param>
          <type><ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref></type>
          <declname>cmp_func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>max_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="38" column="16" bodyfile="src/skiplist.c" bodystart="135" bodyend="146" declfile="include/skiplist.h" declline="38" declcolumn="16"/>
        <references refid="structdict_1a4658ca96529d47daaf0c459afdf9cc59" compoundref="dict_8h" startline="152">dict::_object</references>
        <references refid="structdict_1acf9d1ce55b44ba41d25081c84310a031" compoundref="dict_8h" startline="153">dict::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="skiplist_8c_1a163c5a84a8d9796d5a382824734d041c" compoundref="skiplist_8c" startline="111" endline="132">skiplist_new</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a824d0126c8f9bfdb2a80a357f1846909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_free</definition>
        <argsstring>(skiplist *list, dict_delete_func delete_func)</argsstring>
        <name>skiplist_free</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="39" column="17" bodyfile="src/skiplist.c" bodystart="149" bodyend="155" declfile="include/skiplist.h" declline="39" declcolumn="17"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="skiplist_8c_1adcd7400173bafdbc06f7868e2ff11a9d" compoundref="skiplist_8c" startline="408" endline="425">skiplist_clear</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1ad4842554437de6ab010bb84006b8bf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></type>
        <definition>dict_insert_result skiplist_insert</definition>
        <argsstring>(skiplist *list, void *key)</argsstring>
        <name>skiplist_insert</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="42" column="17" bodyfile="src/skiplist.c" bodystart="183" bodyend="210" declfile="include/skiplist.h" declline="42" declcolumn="17"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" compoundref="skiplist_8c" startline="43">skip_node::link_count</references>
        <references refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" compoundref="skiplist_8c" startline="47">MAX_LINK</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a482f4582ee618e6daefc99e64fcebc59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="43" column="15" bodyfile="src/skiplist.c" bodystart="327" bodyend="331" declfile="include/skiplist.h" declline="43" declcolumn="15"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a373602310b3d20ab40e7634d719081f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_le</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_le</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="44" column="15" bodyfile="src/skiplist.c" bodystart="334" bodyend="338" declfile="include/skiplist.h" declline="44" declcolumn="15"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1ab71061e35d511edaf582707c024d5629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_lt</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_lt</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="45" column="15" bodyfile="src/skiplist.c" bodystart="341" bodyend="345" declfile="include/skiplist.h" declline="45" declcolumn="15"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a98fbe7bcb19546c9e3695eaa592b6b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_ge</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_ge</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="46" column="15" bodyfile="src/skiplist.c" bodystart="348" bodyend="352" declfile="include/skiplist.h" declline="46" declcolumn="15"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a8b8f7145975eff26a2d358a7ab60652f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_search_gt</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_search_gt</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="47" column="15" bodyfile="src/skiplist.c" bodystart="355" bodyend="359" declfile="include/skiplist.h" declline="47" declcolumn="15"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1af23e431ed5e8c8e2aecdcc5627bc68be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></type>
        <definition>dict_remove_result skiplist_remove</definition>
        <argsstring>(skiplist *list, const void *key)</argsstring>
        <name>skiplist_remove</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="50" column="17" bodyfile="src/skiplist.c" bodystart="362" bodyend="405" declfile="include/skiplist.h" declline="50" declcolumn="17"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" compoundref="skiplist_8c" startline="43">skip_node::link_count</references>
        <references refid="skiplist_8c_1abfa744c8ca5b46f7f2a10aea53a4ec59" compoundref="skiplist_8c" startline="47">MAX_LINK</references>
        <references refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" compoundref="skiplist_8c" startline="42">skip_node::prev</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1adcd7400173bafdbc06f7868e2ff11a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_clear</definition>
        <argsstring>(skiplist *list, dict_delete_func delete_func)</argsstring>
        <name>skiplist_clear</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref></type>
          <declname>delete_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="51" column="17" bodyfile="src/skiplist.c" bodystart="408" bodyend="425" declfile="include/skiplist.h" declline="51" declcolumn="17"/>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a15170e44c991e2f0710781da66693072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_traverse</definition>
        <argsstring>(skiplist *list, dict_visit_func visit, void *user_data)</argsstring>
        <name>skiplist_traverse</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref></type>
          <declname>visit</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="52" column="17" bodyfile="src/skiplist.c" bodystart="428" bodyend="436" declfile="include/skiplist.h" declline="52" declcolumn="17"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1aeab0378a37def72ea8c518e1f44a1b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_count</definition>
        <argsstring>(const skiplist *list)</argsstring>
        <name>skiplist_count</name>
        <param>
          <type>const <ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="53" column="17" bodyfile="src/skiplist.c" bodystart="439" bodyend="442" declfile="include/skiplist.h" declline="53" declcolumn="17"/>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a4df47d9ff2ce6126c15bc80d9423bdf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_verify</definition>
        <argsstring>(const skiplist *list)</argsstring>
        <name>skiplist_verify</name>
        <param>
          <type>const <ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="54" column="17" bodyfile="src/skiplist.c" bodystart="445" bodyend="481" declfile="include/skiplist.h" declline="54" declcolumn="17"/>
        <references refid="structskiplist_1a76d971a3c552bc58ba9f0d5fceae9806" compoundref="skiplist_8c" startline="54">skiplist::count</references>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskip__node_1abaf0316f33b38ccdaa4682bebce24ced" compoundref="skiplist_8c" startline="43">skip_node::link_count</references>
        <references refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" compoundref="skiplist_8c" startline="51">skiplist::max_link</references>
        <references refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" compoundref="skiplist_8c" startline="42">skip_node::prev</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
        <references refid="dict__private_8h_1a38818e3cd642f0c0737956ad568e3751" compoundref="dict__private_8h" startline="78" endline="85">VERIFY</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1af9d82cffc987f421df8743706ac80538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t skiplist_link_count_histogram</definition>
        <argsstring>(const skiplist *list, size_t counts[], size_t ncounts)</argsstring>
        <name>skiplist_link_count_histogram</name>
        <param>
          <type>const <ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>counts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>ncounts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="61" column="17" bodyfile="src/skiplist.c" bodystart="484" bodyend="497" declfile="include/skiplist.h" declline="61" declcolumn="17"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1adbe33aa562dee4fa3e409b3544203780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
        <definition>skiplist_itor * skiplist_itor_new</definition>
        <argsstring>(skiplist *list)</argsstring>
        <name>skiplist_itor_new</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="66" column="16" bodyfile="src/skiplist.c" bodystart="500" bodyend="508" declfile="include/skiplist.h" declline="66" declcolumn="16"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdict__itor" kindref="compound">dict_itor</ref> *</type>
        <definition>dict_itor * skiplist_dict_itor_new</definition>
        <argsstring>(skiplist *list)</argsstring>
        <name>skiplist_dict_itor_new</name>
        <param>
          <type><ref refid="structskiplist" kindref="compound">skiplist</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="67" column="16" bodyfile="src/skiplist.c" bodystart="511" bodyend="522" declfile="include/skiplist.h" declline="67" declcolumn="16"/>
        <references refid="structdict__itor_1a5f0e212b1ddef75495c8510a9438f377" compoundref="dict_8h" startline="175">dict_itor::_itor</references>
        <references refid="structdict__itor_1aec8a547b2b1220000757c4dfec8e7847" compoundref="dict_8h" startline="176">dict_itor::_vtable</references>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
        <references refid="dict__private_8h_1a7e3c05d61a56a6798627a9d576cb6b45" compoundref="dict__private_8h" startline="88">MALLOC</references>
        <references refid="skiplist_8c_1adbe33aa562dee4fa3e409b3544203780" compoundref="skiplist_8c" startline="500" endline="508">skiplist_itor_new</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a0038797e29797bdb7ccd59e33f9e65a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void skiplist_itor_free</definition>
        <argsstring>(skiplist_itor *)</argsstring>
        <name>skiplist_itor_free</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="68" column="17" bodyfile="src/skiplist.c" bodystart="525" bodyend="528" declfile="include/skiplist.h" declline="68" declcolumn="17"/>
        <references refid="dict__private_8h_1a02048bf846e8bc87e3ce188e4957ef06" compoundref="dict__private_8h" startline="89">FREE</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a8c9a8ef464827a0ae56e66063b632b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_valid</definition>
        <argsstring>(const skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_valid</name>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="70" column="17" bodyfile="src/skiplist.c" bodystart="531" bodyend="534" declfile="include/skiplist.h" declline="70" declcolumn="17"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a83a1a0a8199354a84a74bc69785d48d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void skiplist_itor_invalidate</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_invalidate</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="71" column="17" bodyfile="src/skiplist.c" bodystart="537" bodyend="540" declfile="include/skiplist.h" declline="71" declcolumn="17"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a6b16e0f86c1a718837212ec494dc639d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_next</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_next</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="72" column="17" bodyfile="src/skiplist.c" bodystart="543" bodyend="548" declfile="include/skiplist.h" declline="72" declcolumn="17"/>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1afa49a5994bef26a067229baf829757da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_prev</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_prev</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="73" column="17" bodyfile="src/skiplist.c" bodystart="551" bodyend="556" declfile="include/skiplist.h" declline="73" declcolumn="17"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="structskip__node_1a45a0b6bc7ce1d301c1527998d99e85f0" compoundref="skiplist_8c" startline="42">skip_node::prev</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1ad6fcce69c6f6ce1e613554bbb2137953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_nextn</definition>
        <argsstring>(skiplist_itor *itor, size_t count)</argsstring>
        <name>skiplist_itor_nextn</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="74" column="17" bodyfile="src/skiplist.c" bodystart="559" bodyend="565" declfile="include/skiplist.h" declline="74" declcolumn="17"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="skiplist_8c_1a6b16e0f86c1a718837212ec494dc639d" compoundref="skiplist_8c" startline="543" endline="548">skiplist_itor_next</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a80b0fe3e44974d0317096d4c9bc85d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_prevn</definition>
        <argsstring>(skiplist_itor *itor, size_t count)</argsstring>
        <name>skiplist_itor_prevn</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="75" column="17" bodyfile="src/skiplist.c" bodystart="568" bodyend="574" declfile="include/skiplist.h" declline="75" declcolumn="17"/>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="skiplist_8c_1afa49a5994bef26a067229baf829757da" compoundref="skiplist_8c" startline="551" endline="556">skiplist_itor_prev</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a6647c65a42000e933fc047a2ff1077af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_first</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_first</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="76" column="17" bodyfile="src/skiplist.c" bodystart="577" bodyend="580" declfile="include/skiplist.h" declline="76" declcolumn="17"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1af97c68bce2728f1b15bbcf2d9ce32a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_last</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_last</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="77" column="17" bodyfile="src/skiplist.c" bodystart="583" bodyend="597" declfile="include/skiplist.h" declline="77" declcolumn="17"/>
        <references refid="structskiplist_1a100e90aa60de0591e29864fef4ba2baf" compoundref="skiplist_8c" startline="50">skiplist::head</references>
        <references refid="structskip__node_1afd0a54ecc55aea8e453873fa9f17b225" compoundref="skiplist_8c" startline="44">skip_node::link</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="structskiplist_1af6e47de1fdddfdde6a04eaf5a4cf1609" compoundref="skiplist_8c" startline="52">skiplist::top_link</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a4adae95e07dd7e8478ce673218a54ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="78" column="17" bodyfile="src/skiplist.c" bodystart="600" bodyend="603" declfile="include/skiplist.h" declline="78" declcolumn="17"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a0067bbc33ec62d152bb64cd6993ff049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_le</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_le</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="79" column="17" bodyfile="src/skiplist.c" bodystart="606" bodyend="609" declfile="include/skiplist.h" declline="79" declcolumn="17"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a8c0239dbe5d95238b677ddc22e80f27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_lt</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_lt</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="80" column="17" bodyfile="src/skiplist.c" bodystart="612" bodyend="615" declfile="include/skiplist.h" declline="80" declcolumn="17"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_ge</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_ge</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="81" column="17" bodyfile="src/skiplist.c" bodystart="618" bodyend="621" declfile="include/skiplist.h" declline="81" declcolumn="17"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a2e73ff31a8023637eaa66e43cccb0075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_search_gt</definition>
        <argsstring>(skiplist_itor *itor, const void *key)</argsstring>
        <name>skiplist_itor_search_gt</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="82" column="17" bodyfile="src/skiplist.c" bodystart="624" bodyend="627" declfile="include/skiplist.h" declline="82" declcolumn="17"/>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a88b927a970f40fe40eb161fc14c88fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * skiplist_itor_key</definition>
        <argsstring>(const skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_key</name>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="83" column="16" bodyfile="src/skiplist.c" bodystart="630" bodyend="633" declfile="include/skiplist.h" declline="83" declcolumn="16"/>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void ** skiplist_itor_datum</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_datum</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="84" column="15" bodyfile="src/skiplist.c" bodystart="636" bodyend="639" declfile="include/skiplist.h" declline="84" declcolumn="15"/>
        <references refid="structskip__node_1a56b62b74c25973b49f06895dfd600c94" compoundref="skiplist_8c" startline="41">skip_node::datum</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a668e525bb9157022c05b9b42700cdc95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int skiplist_itor_compare</definition>
        <argsstring>(const skiplist_itor *it1, const skiplist_itor *it2)</argsstring>
        <name>skiplist_itor_compare</name>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>it1</declname>
        </param>
        <param>
          <type>const <ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>it2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="85" column="17" bodyfile="src/skiplist.c" bodystart="642" bodyend="650" declfile="include/skiplist.h" declline="85" declcolumn="17"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" compoundref="skiplist_8c" startline="53">skiplist::cmp_func</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
      </memberdef>
      <memberdef kind="function" id="skiplist_8h_1a33ddbfa076ade530bcdd0079ec4aa506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool skiplist_itor_remove</definition>
        <argsstring>(skiplist_itor *itor)</argsstring>
        <name>skiplist_itor_remove</name>
        <param>
          <type><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref> *</type>
          <declname>itor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/skiplist.h" line="86" column="17" bodyfile="src/skiplist.c" bodystart="653" bodyend="662" declfile="include/skiplist.h" declline="86" declcolumn="17"/>
        <references refid="dict__private_8h_1a28301f76c53b643912da7c538f74e2c6" compoundref="dict__private_8h" startline="51" endline="58">ASSERT</references>
        <references refid="structskip__node_1ab5c000aec752f2206131e183daf5efbf" compoundref="skiplist_8c" startline="40">skip_node::key</references>
        <references refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" compoundref="skiplist_8c" startline="58">skiplist_itor::list</references>
        <references refid="structskiplist__itor_1afc7e898c4e7283b56a2759a764473cd0" compoundref="skiplist_8c" startline="59">skiplist_itor::node</references>
        <references refid="structdict__remove__result_1a3b6ac8b02ffc67e7ac109edf6dca3ceb" compoundref="dict_8h" startline="81">dict_remove_result::removed</references>
        <references refid="skiplist_8c_1af23e431ed5e8c8e2aecdcc5627bc68be" compoundref="skiplist_8c" startline="362" endline="405">skiplist_remove</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libdict<sp/>--<sp/>skiplist<sp/>interface.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001-2014,<sp/>Farooq<sp/>Mela</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBDICT_SKIPLIST_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBDICT_SKIPLIST_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="dict_8h_1a0c5f0f7b40e3b3df5aaa4c5e3c874b3b" kindref="member">BEGIN_DECL</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="skiplist_8h_1ad54b05301a5276404d53e2bce969c45f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structskiplist" kindref="compound">skiplist</ref><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a163c5a84a8d9796d5a382824734d041c" kindref="member">skiplist_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="structdict" kindref="compound">dict</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a97d5ef497ad5c8b0b14c59097c0efa6b" kindref="member">skiplist_dict_new</ref>(<ref refid="dict_8h_1a1704b677563c3195fcc69dbc42ff8704" kindref="member">dict_compare_func</ref><sp/><ref refid="structskiplist_1a3e0944ca8a425fcd254ca5057e885e45" kindref="member">cmp_func</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structskiplist_1a196385d0ce1b6f622135248c96a88e6d" kindref="member">max_link</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a824d0126c8f9bfdb2a80a357f1846909" kindref="member">skiplist_free</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="structdict__insert__result" kindref="compound">dict_insert_result</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1ad4842554437de6ab010bb84006b8bf39" kindref="member">skiplist_insert</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a482f4582ee618e6daefc99e64fcebc59" kindref="member">skiplist_search</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a373602310b3d20ab40e7634d719081f0" kindref="member">skiplist_search_le</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1ab71061e35d511edaf582707c024d5629" kindref="member">skiplist_search_lt</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a98fbe7bcb19546c9e3695eaa592b6b02" kindref="member">skiplist_search_ge</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a8b8f7145975eff26a2d358a7ab60652f" kindref="member">skiplist_search_gt</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="structdict__remove__result" kindref="compound">dict_remove_result</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1af23e431ed5e8c8e2aecdcc5627bc68be" kindref="member">skiplist_remove</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1adcd7400173bafdbc06f7868e2ff11a9d" kindref="member">skiplist_clear</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="dict_8h_1a5301c8938ac34a1c9f18078bc6464385" kindref="member">dict_delete_func</ref><sp/>delete_func);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a15170e44c991e2f0710781da66693072" kindref="member">skiplist_traverse</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,<sp/><ref refid="dict_8h_1aebbefe3aa81b20e1254e8a7a5253caf6" kindref="member">dict_visit_func</ref><sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1aeab0378a37def72ea8c518e1f44a1b33" kindref="member">skiplist_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a4df47d9ff2ce6126c15bc80d9423bdf1" kindref="member">skiplist_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>histogram<sp/>of<sp/>link<sp/>counts<sp/>of<sp/>the<sp/>skiplist.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>For<sp/>0<sp/>&lt;<sp/>x<sp/>&lt;<sp/>|ncounts|,<sp/>|counts|[x]<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>number<sp/>of<sp/>nodes<sp/>with<sp/>x</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>links,<sp/>and<sp/>the<sp/>maximal<sp/>link<sp/>count<sp/>will<sp/>be<sp/>returned.<sp/>If<sp/>the<sp/>return<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>|ncounts|,<sp/>not<sp/>all<sp/>link<sp/>counts<sp/>could<sp/>be<sp/>stored<sp/>in</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>|counts|<sp/>(i.e.<sp/>the<sp/>array<sp/>was<sp/>not<sp/>large<sp/>enough).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1af9d82cffc987f421df8743706ac80538" kindref="member">skiplist_link_count_histogram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/>list,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counts[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ncounts);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="skiplist_8h_1a516029f32fd57f616f44e5b9650c5847" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/><sp/><ref refid="skiplist_8h_1adbe33aa562dee4fa3e409b3544203780" kindref="member">skiplist_itor_new</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/><ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="structdict__itor" kindref="compound">dict_itor</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1ab465d5aeebddd87b8a4bdb07b5eb0fd0" kindref="member">skiplist_dict_itor_new</ref>(<ref refid="structskiplist" kindref="compound">skiplist</ref>*<sp/><ref refid="structskiplist__itor_1a7260d0d916f979a1e29faecd0cd47e24" kindref="member">list</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a0038797e29797bdb7ccd59e33f9e65a0" kindref="member">skiplist_itor_free</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a8c9a8ef464827a0ae56e66063b632b02" kindref="member">skiplist_itor_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a83a1a0a8199354a84a74bc69785d48d2" kindref="member">skiplist_itor_invalidate</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a6b16e0f86c1a718837212ec494dc639d" kindref="member">skiplist_itor_next</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1afa49a5994bef26a067229baf829757da" kindref="member">skiplist_itor_prev</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1ad6fcce69c6f6ce1e613554bbb2137953" kindref="member">skiplist_itor_nextn</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a80b0fe3e44974d0317096d4c9bc85d75" kindref="member">skiplist_itor_prevn</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a6647c65a42000e933fc047a2ff1077af" kindref="member">skiplist_itor_first</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1af97c68bce2728f1b15bbcf2d9ce32a68" kindref="member">skiplist_itor_last</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a4adae95e07dd7e8478ce673218a54ed2" kindref="member">skiplist_itor_search</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a0067bbc33ec62d152bb64cd6993ff049" kindref="member">skiplist_itor_search_le</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a8c0239dbe5d95238b677ddc22e80f27d" kindref="member">skiplist_itor_search_lt</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1aa6d10c17c75f3cc02f0ce4ff23b7a8e4" kindref="member">skiplist_itor_search_ge</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a2e73ff31a8023637eaa66e43cccb0075" kindref="member">skiplist_itor_search_gt</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a88b927a970f40fe40eb161fc14c88fa2" kindref="member">skiplist_itor_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1aac0b4e5a1495aeeb324fbc0ae11b0dcc" kindref="member">skiplist_itor_datum</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a668e525bb9157022c05b9b42700cdc95" kindref="member">skiplist_itor_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>it1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>it2);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="skiplist_8h_1a33ddbfa076ade530bcdd0079ec4aa506" kindref="member">skiplist_itor_remove</ref>(<ref refid="structskiplist__itor" kindref="compound">skiplist_itor</ref>*<sp/>itor);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="dict_8h_1acca589e3adebef8ed4e5bed6dea40ebb" kindref="member">END_DECL</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!LIBDICT_SKIPLIST_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/skiplist.h"/>
  </compounddef>
</doxygen>
